{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J3adl30y\\\\Desktop\\\\videostreaminghttps\\\\client\\\\src\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport Hls from \"hls.js\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(\"0:00\");\n  const [totalTime, setTotalTime] = useState(\"0:00\");\n  const [progressPosition, setProgressPosition] = useState(0);\n  const [previewPosition, setPreviewPosition] = useState(0);\n  const [bufferedPercentage, setBufferedPercentage] = useState(0);\n  const [isBuffering, setIsBuffering] = useState(false);\n  const [waitingBufferPercentage, setWaitingBufferPercentage] = useState(0);\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const video = videoRef.current;\n    const handleWaiting = () => {\n      setIsBuffering(true);\n    };\n    const handlePlaying = () => {\n      setIsBuffering(false);\n    };\n    const handleSegmentLoaded = () => {\n      const totalSegments = video.querySelectorAll(\"video > source\").length;\n      let loadedSegments = 0;\n      Array.from(video.querySelectorAll(\"video > source\")).forEach(source => {\n        const duration = parseFloat(source.getAttribute(\"duration\"));\n        const size = parseFloat(source.getAttribute(\"size\"));\n        if (!isNaN(duration) && !isNaN(size) && duration !== 0 && size !== 0) {\n          loadedSegments++;\n        }\n      });\n      const waitingBufferPercentage = loadedSegments / totalSegments * 100;\n      setWaitingBufferPercentage(waitingBufferPercentage);\n    };\n    video.addEventListener(\"waiting\", handleWaiting);\n    video.addEventListener(\"playing\", handlePlaying);\n    video.addEventListener(\"loadedmetadata\", handleSegmentLoaded);\n    return () => {\n      video.removeEventListener(\"waiting\", handleWaiting);\n      video.removeEventListener(\"playing\", handlePlaying);\n      video.removeEventListener(\"loadedmetadata\", handleSegmentLoaded);\n    };\n  }, []);\n  useEffect(() => {\n    const video = videoRef.current;\n    const updateTime = () => {\n      const currentTime = video.currentTime;\n      const duration = video.duration;\n      const percentage = currentTime / duration * 100;\n      setProgressPosition(percentage);\n      setCurrentTime(formatTime(currentTime));\n    };\n    const updateBuffered = () => {\n      const buffered = video.buffered;\n      const currentTime = video.currentTime;\n      let maxBufferedEnd = 0;\n      for (let i = 0; i < buffered.length; i++) {\n        if (buffered.start(i) <= currentTime && buffered.end(i) > maxBufferedEnd) {\n          maxBufferedEnd = buffered.end(i);\n        }\n      }\n      const duration = video.duration;\n      const percentage = maxBufferedEnd / duration * 100;\n      setBufferedPercentage(percentage);\n    };\n    const updateTotalTime = () => setTotalTime(formatTime(video.duration));\n    video.addEventListener(\"timeupdate\", updateTime);\n    video.addEventListener(\"progress\", updateBuffered);\n    video.addEventListener(\"durationchange\", updateTotalTime);\n    return () => {\n      video.removeEventListener(\"timeupdate\", updateTime);\n      video.removeEventListener(\"progress\", updateBuffered);\n      video.removeEventListener(\"durationchange\", updateTotalTime);\n    };\n  }, []);\n  useEffect(() => {\n    const video = videoRef.current;\n    const handleVideoSource = () => {\n      if (Hls.isSupported()) {\n        const hls = new Hls();\n        hls.loadSource(\"http://localhost:8080/video/master.m3u8\");\n        hls.attachMedia(video);\n        return () => hls.destroy();\n      } else if (video.canPlayType(\"application/vnd.apple.mpegurl\")) {\n        video.src = \"http://localhost:8080/video/master.m3u8\";\n      }\n    };\n    handleVideoSource();\n  }, []);\n  const formatTime = time => {\n    const formattedHours = Math.floor(time / 3600).toString().padStart(2, \"0\");\n    const formattedMinutes = Math.floor(time % 3600 / 60).toString().padStart(2, \"0\");\n    const formattedSeconds = Math.floor(time % 60).toString().padStart(2, \"0\");\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  };\n  const togglePlay = () => {\n    const video = videoRef.current;\n    if (video.paused) {\n      video.play();\n      setIsPlaying(true);\n    } else {\n      video.pause();\n      setIsPlaying(false);\n    }\n  };\n  const toggleMute = () => {\n    const video = videoRef.current;\n    video.muted = !video.muted;\n    setIsMuted(video.muted);\n    setVolume(video.muted ? 0 : volume);\n  };\n  const handleVolumeChange = event => {\n    const newVolume = parseFloat(event.target.value);\n    setVolume(newVolume);\n    videoRef.current.volume = newVolume;\n    videoRef.current.muted = newVolume === 0;\n    setIsMuted(videoRef.current.muted);\n  };\n  const handleTimelineHover = useCallback(e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const percent = (e.clientX - rect.left) / rect.width;\n    setPreviewPosition(percent * 100);\n  }, []);\n  const handleTimelineClick = useCallback(e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clickPosition = e.clientX - rect.left;\n    const timelineWidth = rect.width;\n    const percent = clickPosition / timelineWidth * 100;\n    setProgressPosition(percent);\n    videoRef.current.currentTime = percent / 100 * videoRef.current.duration;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container paused\",\n    \"data-volume-level\": \"high\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        onMouseMove: handleTimelineHover,\n        onClick: handleTimelineClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          style: {\n            \"--progress-position\": `${progressPosition}%`,\n            \"--preview-position\": `${previewPosition}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loaded-bar\",\n            style: {\n              \"--download-position\": `${bufferedPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thumb-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"icon\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: isPlaying ? \"M14,19H18V5H14M6,19H10V5H6V19Z\" : \"M8,5.14V19.14L19,12.14L8,5.14Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volume-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mute-btn\",\n            onClick: toggleMute,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"volume-icon\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"currentColor\",\n                d: isMuted || volume === 0 ? \"M12,4L9.91,6.09L12,8.18M4.27,3L3,4.27L7.73,9H3V15H7L12,20V13.27L16.25,17.53C15.58,18.04 14.83,18.46 14,18.7V20.77C15.38,20.45 16.63,19.82 17.68,18.96L19.73,21L21,19.73L12,10.73M19,12C19,12.94 18.8,13.82 18.46,14.64L19.97,16.15C20.62,14.91 21,13.5 21,12C21,7.72 18,4.14 14,3.23V5.29C16.89,6.15 19,8.83 19,12M16.5,12C16.5,10.23 15.5,8.71 14,7.97V10.18L16.45,12.63C16.5,12.43 16.5,12.21 16.5,12Z\" : volume >= 0.5 ? \"M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z\" : \"M5,9V15H9L14,20V4L9,9H5Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"volume-slider\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"any\",\n            value: volume,\n            onChange: handleVolumeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"duration-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time\",\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), \"/\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-time\",\n            children: totalTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"full-screen-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"open\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `loading-spinner ${isBuffering ? \"visible\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-text\",\n        children: [waitingBufferPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"417acflYqq1EL3cUJyiZ4ZfJGhk=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Hls","jsxDEV","_jsxDEV","VideoPlayer","_s","isPlaying","setIsPlaying","isMuted","setIsMuted","volume","setVolume","currentTime","setCurrentTime","totalTime","setTotalTime","progressPosition","setProgressPosition","previewPosition","setPreviewPosition","bufferedPercentage","setBufferedPercentage","isBuffering","setIsBuffering","waitingBufferPercentage","setWaitingBufferPercentage","videoRef","video","current","handleWaiting","handlePlaying","handleSegmentLoaded","totalSegments","querySelectorAll","length","loadedSegments","Array","from","forEach","source","duration","parseFloat","getAttribute","size","isNaN","addEventListener","removeEventListener","updateTime","percentage","formatTime","updateBuffered","buffered","maxBufferedEnd","i","start","end","updateTotalTime","handleVideoSource","isSupported","hls","loadSource","attachMedia","destroy","canPlayType","src","time","formattedHours","Math","floor","toString","padStart","formattedMinutes","formattedSeconds","togglePlay","paused","play","pause","toggleMute","muted","handleVolumeChange","event","newVolume","target","value","handleTimelineHover","e","rect","currentTarget","getBoundingClientRect","percent","clientX","left","width","handleTimelineClick","clickPosition","timelineWidth","className","children","onMouseMove","onClick","style","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","fill","d","type","min","max","step","onChange","ref","_c","$RefreshReg$"],"sources":["C:/Users/J3adl30y/Desktop/videostreaminghttps/client/src/VideoPlayer.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport \"./styles.css\";\r\n\r\nconst VideoPlayer = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [volume, setVolume] = useState(1);\r\n  const [currentTime, setCurrentTime] = useState(\"0:00\");\r\n  const [totalTime, setTotalTime] = useState(\"0:00\");\r\n  const [progressPosition, setProgressPosition] = useState(0);\r\n  const [previewPosition, setPreviewPosition] = useState(0);\r\n  const [bufferedPercentage, setBufferedPercentage] = useState(0);\r\n  const [isBuffering, setIsBuffering] = useState(false);\r\n  const [waitingBufferPercentage, setWaitingBufferPercentage] = useState(0);\r\n\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n\r\n    const handleWaiting = () => {\r\n      setIsBuffering(true);\r\n    };\r\n\r\n    const handlePlaying = () => {\r\n      setIsBuffering(false);\r\n    };\r\n\r\n    const handleSegmentLoaded = () => {\r\n      const totalSegments = video.querySelectorAll(\"video > source\").length;\r\n      let loadedSegments = 0;\r\n      Array.from(video.querySelectorAll(\"video > source\")).forEach((source) => {\r\n        const duration = parseFloat(source.getAttribute(\"duration\"));\r\n        const size = parseFloat(source.getAttribute(\"size\"));\r\n        if (!isNaN(duration) && !isNaN(size) && duration !== 0 && size !== 0) {\r\n          loadedSegments++;\r\n        }\r\n      });\r\n      const waitingBufferPercentage = (loadedSegments / totalSegments) * 100;\r\n      setWaitingBufferPercentage(waitingBufferPercentage);\r\n    };\r\n\r\n    video.addEventListener(\"waiting\", handleWaiting);\r\n    video.addEventListener(\"playing\", handlePlaying);\r\n    video.addEventListener(\"loadedmetadata\", handleSegmentLoaded);\r\n\r\n    return () => {\r\n      video.removeEventListener(\"waiting\", handleWaiting);\r\n      video.removeEventListener(\"playing\", handlePlaying);\r\n      video.removeEventListener(\"loadedmetadata\", handleSegmentLoaded);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n\r\n    const updateTime = () => {\r\n      const currentTime = video.currentTime;\r\n      const duration = video.duration;\r\n      const percentage = (currentTime / duration) * 100;\r\n      setProgressPosition(percentage);\r\n      setCurrentTime(formatTime(currentTime));\r\n    };\r\n\r\n    const updateBuffered = () => {\r\n      const buffered = video.buffered;\r\n      const currentTime = video.currentTime;\r\n      let maxBufferedEnd = 0;\r\n      for (let i = 0; i < buffered.length; i++) {\r\n        if (\r\n          buffered.start(i) <= currentTime &&\r\n          buffered.end(i) > maxBufferedEnd\r\n        ) {\r\n          maxBufferedEnd = buffered.end(i);\r\n        }\r\n      }\r\n      const duration = video.duration;\r\n      const percentage = (maxBufferedEnd / duration) * 100;\r\n      setBufferedPercentage(percentage);\r\n    };\r\n\r\n    const updateTotalTime = () => setTotalTime(formatTime(video.duration));\r\n\r\n    video.addEventListener(\"timeupdate\", updateTime);\r\n    video.addEventListener(\"progress\", updateBuffered);\r\n    video.addEventListener(\"durationchange\", updateTotalTime);\r\n\r\n    return () => {\r\n      video.removeEventListener(\"timeupdate\", updateTime);\r\n      video.removeEventListener(\"progress\", updateBuffered);\r\n      video.removeEventListener(\"durationchange\", updateTotalTime);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    const handleVideoSource = () => {\r\n      if (Hls.isSupported()) {\r\n        const hls = new Hls();\r\n        hls.loadSource(\"http://localhost:8080/video/master.m3u8\");\r\n        hls.attachMedia(video);\r\n        return () => hls.destroy();\r\n      } else if (video.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n        video.src = \"http://localhost:8080/video/master.m3u8\";\r\n      }\r\n    };\r\n    handleVideoSource();\r\n  }, []);\r\n\r\n  const formatTime = (time) => {\r\n    const formattedHours = Math.floor(time / 3600)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    const formattedMinutes = Math.floor((time % 3600) / 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    const formattedSeconds = Math.floor(time % 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\r\n  };\r\n\r\n  const togglePlay = () => {\r\n    const video = videoRef.current;\r\n    if (video.paused) {\r\n      video.play();\r\n      setIsPlaying(true);\r\n    } else {\r\n      video.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    const video = videoRef.current;\r\n    video.muted = !video.muted;\r\n    setIsMuted(video.muted);\r\n    setVolume(video.muted ? 0 : volume);\r\n  };\r\n\r\n  const handleVolumeChange = (event) => {\r\n    const newVolume = parseFloat(event.target.value);\r\n    setVolume(newVolume);\r\n    videoRef.current.volume = newVolume;\r\n    videoRef.current.muted = newVolume === 0;\r\n    setIsMuted(videoRef.current.muted);\r\n  };\r\n\r\n  const handleTimelineHover = useCallback((e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const percent = (e.clientX - rect.left) / rect.width;\r\n    setPreviewPosition(percent * 100);\r\n  }, []);\r\n\r\n  const handleTimelineClick = useCallback((e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const clickPosition = e.clientX - rect.left;\r\n    const timelineWidth = rect.width;\r\n    const percent = (clickPosition / timelineWidth) * 100;\r\n    setProgressPosition(percent);\r\n    videoRef.current.currentTime = (percent / 100) * videoRef.current.duration;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"video-container paused\" data-volume-level=\"high\">\r\n      <div className=\"video-controls-container\">\r\n        <div\r\n          className=\"timeline-container\"\r\n          onMouseMove={handleTimelineHover}\r\n          onClick={handleTimelineClick}\r\n        >\r\n          <div\r\n            className=\"timeline\"\r\n            style={{\r\n              \"--progress-position\": `${progressPosition}%`,\r\n              \"--preview-position\": `${previewPosition}%`,\r\n            }}\r\n          >\r\n            <div\r\n              className=\"loaded-bar\"\r\n              style={{\r\n                \"--download-position\": `${bufferedPercentage}%`,\r\n              }}\r\n            ></div>\r\n            <div className=\"thumb-indicator\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"controls\">\r\n          <button onClick={togglePlay}>\r\n            <svg className=\"icon\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d={\r\n                  isPlaying\r\n                    ? \"M14,19H18V5H14M6,19H10V5H6V19Z\"\r\n                    : \"M8,5.14V19.14L19,12.14L8,5.14Z\"\r\n                }\r\n              />\r\n            </svg>\r\n          </button>\r\n          <div className=\"volume-container\">\r\n            <button className=\"mute-btn\" onClick={toggleMute}>\r\n              <svg className=\"volume-icon\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d={\r\n                    isMuted || volume === 0\r\n                      ? \"M12,4L9.91,6.09L12,8.18M4.27,3L3,4.27L7.73,9H3V15H7L12,20V13.27L16.25,17.53C15.58,18.04 14.83,18.46 14,18.7V20.77C15.38,20.45 16.63,19.82 17.68,18.96L19.73,21L21,19.73L12,10.73M19,12C19,12.94 18.8,13.82 18.46,14.64L19.97,16.15C20.62,14.91 21,13.5 21,12C21,7.72 18,4.14 14,3.23V5.29C16.89,6.15 19,8.83 19,12M16.5,12C16.5,10.23 15.5,8.71 14,7.97V10.18L16.45,12.63C16.5,12.43 16.5,12.21 16.5,12Z\"\r\n                      : volume >= 0.5\r\n                      ? \"M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z\"\r\n                      : \"M5,9V15H9L14,20V4L9,9H5Z\"\r\n                  }\r\n                />\r\n              </svg>\r\n            </button>\r\n            <input\r\n              className=\"volume-slider\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              step=\"any\"\r\n              value={volume}\r\n              onChange={handleVolumeChange}\r\n            />\r\n          </div>\r\n          <div className=\"duration-container\">\r\n            <div className=\"current-time\">{currentTime}</div>/\r\n            <div className=\"total-time\">{totalTime}</div>\r\n          </div>\r\n          <button className=\"full-screen-btn\">\r\n            <svg className=\"open\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <video ref={videoRef}></video>\r\n      <div className={`loading-spinner ${isBuffering ? \"visible\" : \"\"}`}>\r\n        <div className=\"spinner\"></div>\r\n        <div className=\"spinner-text\">{waitingBufferPercentage}%</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}