{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J3adl30y\\\\Desktop\\\\videostreaminghttps\\\\client\\\\src\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport Hls from \"hls.js\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [currentTime, setCurrentTime] = useState(\"0:00\");\n  const [totalTime, setTotalTime] = useState(\"0:00\");\n  const [progressPosition, setProgressPosition] = useState(0);\n  const [previewPosition, setPreviewPosition] = useState(0);\n  const [bufferedPercentage, setBufferedPercentage] = useState(0);\n  const [isBuffering, setIsBuffering] = useState(false);\n  const [waitingBufferPercentage, setWaitingBufferPercentage] = useState(0);\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const video = videoRef.current;\n    const hls = new Hls();\n    const handleFragmentLoaded = () => {\n      if (hls.media) {\n        const bufferedEnd = hls.media.buffered.end(0); // Get the end time of the loaded part of the buffer\n        const totalDuration = hls.media.duration; // Total duration of the video\n        const percentage = bufferedEnd / totalDuration * 100; // Calculate the percentage\n        setWaitingBufferPercentage(percentage);\n      }\n    };\n    if (Hls.isSupported()) {\n      hls.loadSource(\"http://localhost:8080/video/master.m3u8\");\n      hls.attachMedia(video);\n      hls.on(Hls.Events.FRAG_LOADED, handleFragmentLoaded);\n    } else if (video.canPlayType(\"application/vnd.apple.mpegurl\")) {\n      video.src = \"http://localhost:8080/video/master.m3u8\";\n    }\n    return () => {\n      hls.destroy();\n    };\n  }, []);\n  useEffect(() => {\n    const video = videoRef.current;\n    const updateTime = () => {\n      const currentTime = video.currentTime;\n      const duration = video.duration;\n      const percentage = currentTime / duration * 100;\n      setProgressPosition(percentage);\n      setCurrentTime(formatTime(currentTime));\n    };\n    const updateBuffered = () => {\n      const buffered = video.buffered;\n      const currentTime = video.currentTime;\n      let maxBufferedEnd = 0;\n      for (let i = 0; i < buffered.length; i++) {\n        if (buffered.start(i) <= currentTime && buffered.end(i) > maxBufferedEnd) {\n          maxBufferedEnd = buffered.end(i);\n        }\n      }\n      const duration = video.duration;\n      const percentage = maxBufferedEnd / duration * 100;\n      setBufferedPercentage(percentage);\n    };\n    const updateTotalTime = () => setTotalTime(formatTime(video.duration));\n    video.addEventListener(\"timeupdate\", updateTime);\n    video.addEventListener(\"progress\", updateBuffered);\n    video.addEventListener(\"durationchange\", updateTotalTime);\n    return () => {\n      video.removeEventListener(\"timeupdate\", updateTime);\n      video.removeEventListener(\"progress\", updateBuffered);\n      video.removeEventListener(\"durationchange\", updateTotalTime);\n    };\n  }, []);\n  const formatTime = time => {\n    const formattedHours = Math.floor(time / 3600).toString().padStart(2, \"0\");\n    const formattedMinutes = Math.floor(time % 3600 / 60).toString().padStart(2, \"0\");\n    const formattedSeconds = Math.floor(time % 60).toString().padStart(2, \"0\");\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  };\n  const togglePlay = () => {\n    const video = videoRef.current;\n    if (video.paused) {\n      video.play();\n      setIsPlaying(true);\n    } else {\n      video.pause();\n      setIsPlaying(false);\n    }\n  };\n  const toggleMute = () => {\n    const video = videoRef.current;\n    video.muted = !video.muted;\n    setIsMuted(video.muted);\n    setVolume(video.muted ? 0 : volume);\n  };\n  const handleVolumeChange = event => {\n    const newVolume = parseFloat(event.target.value);\n    setVolume(newVolume);\n    videoRef.current.volume = newVolume;\n    videoRef.current.muted = newVolume === 0;\n    setIsMuted(videoRef.current.muted);\n  };\n  const handleTimelineHover = useCallback(e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const percent = (e.clientX - rect.left) / rect.width;\n    setPreviewPosition(percent * 100);\n  }, []);\n  const handleTimelineClick = useCallback(e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clickPosition = e.clientX - rect.left;\n    const timelineWidth = rect.width;\n    const percent = clickPosition / timelineWidth * 100;\n    setProgressPosition(percent);\n    videoRef.current.currentTime = percent / 100 * videoRef.current.duration;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container paused\",\n    \"data-volume-level\": \"high\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        onMouseMove: handleTimelineHover,\n        onClick: handleTimelineClick,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          style: {\n            \"--progress-position\": `${progressPosition}%`,\n            \"--preview-position\": `${previewPosition}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loaded-bar\",\n            style: {\n              \"--download-position\": `${bufferedPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thumb-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlay,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"icon\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: isPlaying ? \"M14,19H18V5H14M6,19H10V5H6V19Z\" : \"M8,5.14V19.14L19,12.14L8,5.14Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volume-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mute-btn\",\n            onClick: toggleMute,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"volume-icon\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"currentColor\",\n                d: isMuted || volume === 0 ? \"M12,4L9.91,6.09L12,8.18M4.27,3L3,4.27L7.73,9H3V15H7L12,20V13.27L16.25,17.53C15.58,18.04 14.83,18.46 14,18.7V20.77C15.38,20.45 16.63,19.82 17.68,18.96L19.73,21L21,19.73L12,10.73M19,12C19,12.94 18.8,13.82 18.46,14.64L19.97,16.15C20.62,14.91 21,13.5 21,12C21,7.72 18,4.14 14,3.23V5.29C16.89,6.15 19,8.83 19,12M16.5,12C16.5,10.23 15.5,8.71 14,7.97V10.18L16.45,12.63C16.5,12.43 16.5,12.21 16.5,12Z\" : volume >= 0.5 ? \"M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z\" : \"M5,9V15H9L14,20V4L9,9H5Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"volume-slider\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"any\",\n            value: volume,\n            onChange: handleVolumeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"duration-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time\",\n            children: currentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), \"/\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-time\",\n            children: totalTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"full-screen-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"open\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `loading-spinner ${isBuffering ? \"visible\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-text\",\n        children: [waitingBufferPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"Kj195wfVn39uUV5PD7XfX8Hcrf8=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Hls","jsxDEV","_jsxDEV","VideoPlayer","_s","isPlaying","setIsPlaying","isMuted","setIsMuted","volume","setVolume","currentTime","setCurrentTime","totalTime","setTotalTime","progressPosition","setProgressPosition","previewPosition","setPreviewPosition","bufferedPercentage","setBufferedPercentage","isBuffering","setIsBuffering","waitingBufferPercentage","setWaitingBufferPercentage","videoRef","video","current","hls","handleFragmentLoaded","media","bufferedEnd","buffered","end","totalDuration","duration","percentage","isSupported","loadSource","attachMedia","on","Events","FRAG_LOADED","canPlayType","src","destroy","updateTime","formatTime","updateBuffered","maxBufferedEnd","i","length","start","updateTotalTime","addEventListener","removeEventListener","time","formattedHours","Math","floor","toString","padStart","formattedMinutes","formattedSeconds","togglePlay","paused","play","pause","toggleMute","muted","handleVolumeChange","event","newVolume","parseFloat","target","value","handleTimelineHover","e","rect","currentTarget","getBoundingClientRect","percent","clientX","left","width","handleTimelineClick","clickPosition","timelineWidth","className","children","onMouseMove","onClick","style","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","fill","d","type","min","max","step","onChange","ref","_c","$RefreshReg$"],"sources":["C:/Users/J3adl30y/Desktop/videostreaminghttps/client/src/VideoPlayer.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from \"react\";\r\nimport Hls from \"hls.js\";\r\nimport \"./styles.css\";\r\n\r\nconst VideoPlayer = () => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [volume, setVolume] = useState(1);\r\n  const [currentTime, setCurrentTime] = useState(\"0:00\");\r\n  const [totalTime, setTotalTime] = useState(\"0:00\");\r\n  const [progressPosition, setProgressPosition] = useState(0);\r\n  const [previewPosition, setPreviewPosition] = useState(0);\r\n  const [bufferedPercentage, setBufferedPercentage] = useState(0);\r\n  const [isBuffering, setIsBuffering] = useState(false);\r\n  const [waitingBufferPercentage, setWaitingBufferPercentage] = useState(0);\r\n\r\n  const videoRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    const hls = new Hls();\r\n\r\n    const handleFragmentLoaded = () => {\r\n      if (hls.media) {\r\n        const bufferedEnd = hls.media.buffered.end(0); // Get the end time of the loaded part of the buffer\r\n        const totalDuration = hls.media.duration; // Total duration of the video\r\n        const percentage = (bufferedEnd / totalDuration) * 100; // Calculate the percentage\r\n        setWaitingBufferPercentage(percentage);\r\n      }\r\n    };\r\n\r\n    if (Hls.isSupported()) {\r\n      hls.loadSource(\"http://localhost:8080/video/master.m3u8\");\r\n      hls.attachMedia(video);\r\n      hls.on(Hls.Events.FRAG_LOADED, handleFragmentLoaded);\r\n    } else if (video.canPlayType(\"application/vnd.apple.mpegurl\")) {\r\n      video.src = \"http://localhost:8080/video/master.m3u8\";\r\n    }\r\n\r\n    return () => {\r\n      hls.destroy();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n\r\n    const updateTime = () => {\r\n      const currentTime = video.currentTime;\r\n      const duration = video.duration;\r\n      const percentage = (currentTime / duration) * 100;\r\n      setProgressPosition(percentage);\r\n      setCurrentTime(formatTime(currentTime));\r\n    };\r\n\r\n    const updateBuffered = () => {\r\n      const buffered = video.buffered;\r\n      const currentTime = video.currentTime;\r\n      let maxBufferedEnd = 0;\r\n      for (let i = 0; i < buffered.length; i++) {\r\n        if (\r\n          buffered.start(i) <= currentTime &&\r\n          buffered.end(i) > maxBufferedEnd\r\n        ) {\r\n          maxBufferedEnd = buffered.end(i);\r\n        }\r\n      }\r\n      const duration = video.duration;\r\n      const percentage = (maxBufferedEnd / duration) * 100;\r\n      setBufferedPercentage(percentage);\r\n    };\r\n\r\n    const updateTotalTime = () => setTotalTime(formatTime(video.duration));\r\n\r\n    video.addEventListener(\"timeupdate\", updateTime);\r\n    video.addEventListener(\"progress\", updateBuffered);\r\n    video.addEventListener(\"durationchange\", updateTotalTime);\r\n\r\n    return () => {\r\n      video.removeEventListener(\"timeupdate\", updateTime);\r\n      video.removeEventListener(\"progress\", updateBuffered);\r\n      video.removeEventListener(\"durationchange\", updateTotalTime);\r\n    };\r\n  }, []);\r\n\r\n  const formatTime = (time) => {\r\n    const formattedHours = Math.floor(time / 3600)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    const formattedMinutes = Math.floor((time % 3600) / 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    const formattedSeconds = Math.floor(time % 60)\r\n      .toString()\r\n      .padStart(2, \"0\");\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\r\n  };\r\n\r\n  const togglePlay = () => {\r\n    const video = videoRef.current;\r\n    if (video.paused) {\r\n      video.play();\r\n      setIsPlaying(true);\r\n    } else {\r\n      video.pause();\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    const video = videoRef.current;\r\n    video.muted = !video.muted;\r\n    setIsMuted(video.muted);\r\n    setVolume(video.muted ? 0 : volume);\r\n  };\r\n\r\n  const handleVolumeChange = (event) => {\r\n    const newVolume = parseFloat(event.target.value);\r\n    setVolume(newVolume);\r\n    videoRef.current.volume = newVolume;\r\n    videoRef.current.muted = newVolume === 0;\r\n    setIsMuted(videoRef.current.muted);\r\n  };\r\n\r\n  const handleTimelineHover = useCallback((e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const percent = (e.clientX - rect.left) / rect.width;\r\n    setPreviewPosition(percent * 100);\r\n  }, []);\r\n\r\n  const handleTimelineClick = useCallback((e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const clickPosition = e.clientX - rect.left;\r\n    const timelineWidth = rect.width;\r\n    const percent = (clickPosition / timelineWidth) * 100;\r\n    setProgressPosition(percent);\r\n    videoRef.current.currentTime = (percent / 100) * videoRef.current.duration;\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"video-container paused\" data-volume-level=\"high\">\r\n      <div className=\"video-controls-container\">\r\n        <div\r\n          className=\"timeline-container\"\r\n          onMouseMove={handleTimelineHover}\r\n          onClick={handleTimelineClick}\r\n        >\r\n          <div\r\n            className=\"timeline\"\r\n            style={{\r\n              \"--progress-position\": `${progressPosition}%`,\r\n              \"--preview-position\": `${previewPosition}%`,\r\n            }}\r\n          >\r\n            <div\r\n              className=\"loaded-bar\"\r\n              style={{\r\n                \"--download-position\": `${bufferedPercentage}%`,\r\n              }}\r\n            ></div>\r\n            <div className=\"thumb-indicator\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"controls\">\r\n          <button onClick={togglePlay}>\r\n            <svg className=\"icon\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d={\r\n                  isPlaying\r\n                    ? \"M14,19H18V5H14M6,19H10V5H6V19Z\"\r\n                    : \"M8,5.14V19.14L19,12.14L8,5.14Z\"\r\n                }\r\n              />\r\n            </svg>\r\n          </button>\r\n          <div className=\"volume-container\">\r\n            <button className=\"mute-btn\" onClick={toggleMute}>\r\n              <svg className=\"volume-icon\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d={\r\n                    isMuted || volume === 0\r\n                      ? \"M12,4L9.91,6.09L12,8.18M4.27,3L3,4.27L7.73,9H3V15H7L12,20V13.27L16.25,17.53C15.58,18.04 14.83,18.46 14,18.7V20.77C15.38,20.45 16.63,19.82 17.68,18.96L19.73,21L21,19.73L12,10.73M19,12C19,12.94 18.8,13.82 18.46,14.64L19.97,16.15C20.62,14.91 21,13.5 21,12C21,7.72 18,4.14 14,3.23V5.29C16.89,6.15 19,8.83 19,12M16.5,12C16.5,10.23 15.5,8.71 14,7.97V10.18L16.45,12.63C16.5,12.43 16.5,12.21 16.5,12Z\"\r\n                      : volume >= 0.5\r\n                      ? \"M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z\"\r\n                      : \"M5,9V15H9L14,20V4L9,9H5Z\"\r\n                  }\r\n                />\r\n              </svg>\r\n            </button>\r\n            <input\r\n              className=\"volume-slider\"\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              step=\"any\"\r\n              value={volume}\r\n              onChange={handleVolumeChange}\r\n            />\r\n          </div>\r\n          <div className=\"duration-container\">\r\n            <div className=\"current-time\">{currentTime}</div>/\r\n            <div className=\"total-time\">{totalTime}</div>\r\n          </div>\r\n          <button className=\"full-screen-btn\">\r\n            <svg className=\"open\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <video ref={videoRef}></video>\r\n      <div className={`loading-spinner ${isBuffering ? \"visible\" : \"\"}`}>\r\n        <div className=\"spinner\"></div>\r\n        <div className=\"spinner-text\">{waitingBufferPercentage}%</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}