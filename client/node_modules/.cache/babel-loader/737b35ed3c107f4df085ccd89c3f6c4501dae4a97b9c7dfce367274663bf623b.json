{"ast":null,"code":"/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n    if (pair.length > 1) {\n      var _name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[_name] = value;\n    }\n  });\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\nexports['default'] = {\n  isAudioCodec: isAudioCodec,\n  parseContentType: parseContentType,\n  isVideoCodec: isVideoCodec,\n  translateLegacyCodecs: translateLegacyCodecs\n};\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","isAudioCodec","codec","test","isVideoCodec","parseContentType","type","object","parameters","trim","split","shift","forEach","parameter","pair","length","_name","replace","translateLegacyCodecs","codecs","map","orig","profile","avcLevel","profileHex","Number","toString","slice","avcLevelHex","module"],"sources":["C:/Users/J3adl30y/Desktop/videostreaming/client/node_modules/videojs-contrib-media-sources/es5/codec-utils.js"],"sourcesContent":["/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var _name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[_name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\nexports['default'] = {\n  isAudioCodec: isAudioCodec,\n  parseContentType: parseContentType,\n  isVideoCodec: isVideoCodec,\n  translateLegacyCodecs: translateLegacyCodecs\n};\nmodule.exports = exports['default'];"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACF,IAAIC,YAAY,GAAG,SAASA,YAAYA,CAACC,KAAK,EAAE;EAC9C,OAAQ,gBAAgB,CAACC,IAAI,CAACD,KAAK,CAAC;AAEtC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,YAAY,GAAG,SAASA,YAAYA,CAACF,KAAK,EAAE;EAC9C,OAAQ,iBAAiB,CAACC,IAAI,CAACD,KAAK,CAAC;AAEvC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,IAAI,EAAE;EACrD,IAAIC,MAAM,GAAG;IAAED,IAAI,EAAE,EAAE;IAAEE,UAAU,EAAE,CAAC;EAAE,CAAC;EACzC,IAAIA,UAAU,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;;EAEvC;EACAH,MAAM,CAACD,IAAI,GAAGE,UAAU,CAACG,KAAK,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;EACvCD,UAAU,CAACI,OAAO,CAAC,UAAUC,SAAS,EAAE;IACtC,IAAIC,IAAI,GAAGD,SAAS,CAACJ,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IAEtC,IAAII,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;MACnB,IAAIC,KAAK,GAAGF,IAAI,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACR,IAAI,CAAC,CAAC;MAC5C,IAAIT,KAAK,GAAGc,IAAI,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACR,IAAI,CAAC,CAAC;MAE5CF,MAAM,CAACC,UAAU,CAACQ,KAAK,CAAC,GAAGhB,KAAK;IAClC;EACF,CAAC,CAAC;EAEF,OAAOO,MAAM;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIW,qBAAqB,GAAG,SAASA,qBAAqBA,CAACC,MAAM,EAAE;EACjE,OAAOA,MAAM,CAACC,GAAG,CAAC,UAAUlB,KAAK,EAAE;IACjC,OAAOA,KAAK,CAACe,OAAO,CAAC,qBAAqB,EAAE,UAAUI,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAE;MAC7E,IAAIC,UAAU,GAAG,CAAC,IAAI,GAAGC,MAAM,CAACH,OAAO,CAAC,CAACI,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MAChE,IAAIC,WAAW,GAAG,CAAC,IAAI,GAAGH,MAAM,CAACF,QAAQ,CAAC,CAACG,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;MAElE,OAAO,OAAO,GAAGH,UAAU,GAAG,IAAI,GAAGI,WAAW;IAClD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED7B,OAAO,CAAC,SAAS,CAAC,GAAG;EACnBE,YAAY,EAAEA,YAAY;EAC1BI,gBAAgB,EAAEA,gBAAgB;EAClCD,YAAY,EAAEA,YAAY;EAC1Bc,qBAAqB,EAAEA;AACzB,CAAC;AACDW,MAAM,CAAC9B,OAAO,GAAGA,OAAO,CAAC,SAAS,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}