{"ast":null,"code":"/**\n * @file videojs-contrib-hls.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-contrib-hls/blob/master/LICENSE\n */\n'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _get = function get(_x4, _x5, _x6) {\n  var _again = true;\n  _function: while (_again) {\n    var object = _x4,\n      property = _x5,\n      receiver = _x6;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x4 = parent;\n        _x5 = property;\n        _x6 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n      if (getter === undefined) {\n        return undefined;\n      }\n      return getter.call(receiver);\n    }\n  }\n};\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar _globalDocument = require('global/document');\nvar _globalDocument2 = _interopRequireDefault(_globalDocument);\nvar _playlistLoader = require('./playlist-loader');\nvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\nvar _playlist = require('./playlist');\nvar _playlist2 = _interopRequireDefault(_playlist);\nvar _xhr = require('./xhr');\nvar _xhr2 = _interopRequireDefault(_xhr);\nvar _aesDecrypter = require('aes-decrypter');\nvar _binUtils = require('./bin-utils');\nvar _binUtils2 = _interopRequireDefault(_binUtils);\nvar _videojsContribMediaSources = require('videojs-contrib-media-sources');\nvar _m3u8Parser = require('m3u8-parser');\nvar _m3u8Parser2 = _interopRequireDefault(_m3u8Parser);\nvar _videoJs = require('video.js');\nvar _videoJs2 = _interopRequireDefault(_videoJs);\nvar _masterPlaylistController = require('./master-playlist-controller');\nvar _config = require('./config');\nvar _config2 = _interopRequireDefault(_config);\nvar _renditionMixin = require('./rendition-mixin');\nvar _renditionMixin2 = _interopRequireDefault(_renditionMixin);\nvar _globalWindow = require('global/window');\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\nvar _playbackWatcher = require('./playback-watcher');\nvar _playbackWatcher2 = _interopRequireDefault(_playbackWatcher);\nvar _reloadSourceOnError = require('./reload-source-on-error');\nvar _reloadSourceOnError2 = _interopRequireDefault(_reloadSourceOnError);\nvar _playlistSelectorsJs = require('./playlist-selectors.js');\nvar Hls = {\n  PlaylistLoader: _playlistLoader2['default'],\n  Playlist: _playlist2['default'],\n  Decrypter: _aesDecrypter.Decrypter,\n  AsyncStream: _aesDecrypter.AsyncStream,\n  decrypt: _aesDecrypter.decrypt,\n  utils: _binUtils2['default'],\n  STANDARD_PLAYLIST_SELECTOR: _playlistSelectorsJs.lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: _playlistSelectorsJs.lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: _playlistSelectorsJs.comparePlaylistBandwidth,\n  comparePlaylistResolution: _playlistSelectorsJs.comparePlaylistResolution,\n  xhr: (0, _xhr2['default'])()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls, prop, {\n    get: function get() {\n      _videoJs2['default'].log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return _config2['default'][prop];\n    },\n    set: function set(value) {\n      _videoJs2['default'].log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      if (typeof value !== 'number' || value < 0) {\n        _videoJs2['default'].log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n      _config2['default'][prop] = value;\n    }\n  });\n});\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls.canPlaySource = function () {\n  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls.supportsNativeHls = function () {\n  var video = _globalDocument2['default'].createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!_videoJs2['default'].getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls.isSupported = function () {\n  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nvar Component = _videoJs2['default'].getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  _inherits(HlsHandler, _Component);\n  function HlsHandler(source, tech, options) {\n    var _this = this;\n    _classCallCheck(this, HlsHandler);\n    _get(Object.getPrototypeOf(HlsHandler.prototype), 'constructor', this).call(this, tech, options.hls);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = (0, _videoJs2['default'])(tech.options_.playerId);\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get() {\n            _videoJs2['default'].log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          }\n        });\n      }\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n\n    // overriding native HLS only works if audio tracks have been emulated\n    // error early if we're misconfigured:\n    if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    this.on(_globalDocument2['default'], ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = _globalDocument2['default'].fullscreenElement || _globalDocument2['default'].webkitFullscreenElement || _globalDocument2['default'].mozFullScreenElement || _globalDocument2['default'].msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n  _createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth', 'handleManifestRedirects'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.bandwidth = this.options_.bandwidth;\n    }\n\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n  }, {\n    key: 'src',\n    value: function src(_src) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls;\n      this.masterPlaylistController_ = new _masterPlaylistController.MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new _playbackWatcher2['default'](_videoJs2['default'].mergeOptions(this.options_, {\n        seekable: function seekable() {\n          return _this3.seekable();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = _videoJs2['default'].players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = undefined;\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set() {\n            _videoJs2['default'].log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        (0, _renditionMixin2['default'])(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n      this.tech_.src(_videoJs2['default'].URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n      var player = _videoJs2['default'].players[this.tech_.options_.playerId];\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'duration',\n    value: function duration() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'seekable',\n    value: function seekable() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n    * Abort all outstanding work and cleanup.\n    */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      _get(Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component);\nvar HlsSourceHandler = function HlsSourceHandler(mode) {\n  return {\n    canHandleSource: function canHandleSource(srcObj) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options);\n\n      // this forces video.js to skip this tech/mode if its not the one we have been\n      // overriden to use, by returing that we cannot handle the source.\n      if (localOptions.hls && localOptions.hls.mode && localOptions.hls.mode !== mode) {\n        return false;\n      }\n      return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource: function handleSource(source, tech) {\n      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options, {\n        hls: {\n          mode: mode\n        }\n      });\n      if (mode === 'flash') {\n        // We need to trigger this asynchronously to give others the chance\n        // to bind to the event when a source is set at player creation\n        tech.setTimeout(function () {\n          tech.trigger('loadstart');\n        }, 1);\n      }\n      tech.hls = new HlsHandler(source, tech, localOptions);\n      tech.hls.xhr = (0, _xhr2['default'])();\n      tech.hls.src(source.src);\n      return tech.hls;\n    },\n    canPlayType: function canPlayType(type) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options);\n      if (HlsSourceHandler.canPlayType(type, localOptions)) {\n        return 'maybe';\n      }\n      return '';\n    }\n  };\n};\nHlsSourceHandler.canPlayType = function (type, options) {\n  // No support for IE 10 or below\n  if (_videoJs2['default'].browser.IE_VERSION && _videoJs2['default'].browser.IE_VERSION <= 10) {\n    return false;\n  }\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  // favor native HLS support if it's available\n  if (!options.hls.overrideNative && Hls.supportsNativeHls) {\n    return false;\n  }\n  return mpegurlRE.test(type);\n};\nif (typeof _videoJs2['default'].MediaSource === 'undefined' || typeof _videoJs2['default'].URL === 'undefined') {\n  _videoJs2['default'].MediaSource = _videojsContribMediaSources.MediaSource;\n  _videoJs2['default'].URL = _videojsContribMediaSources.URL;\n}\nvar flashTech = _videoJs2['default'].getTech('Flash');\n\n// register source handlers with the appropriate techs\nif (_videojsContribMediaSources.MediaSource.supportsNativeMediaSources()) {\n  _videoJs2['default'].getTech('Html5').registerSourceHandler(HlsSourceHandler('html5'), 0);\n}\nif (_globalWindow2['default'].Uint8Array && flashTech) {\n  flashTech.registerSourceHandler(HlsSourceHandler('flash'));\n}\n_videoJs2['default'].HlsHandler = HlsHandler;\n_videoJs2['default'].HlsSourceHandler = HlsSourceHandler;\n_videoJs2['default'].Hls = Hls;\nif (!_videoJs2['default'].use) {\n  _videoJs2['default'].registerComponent('Hls', Hls);\n}\n_videoJs2['default'].m3u8 = _m3u8Parser2['default'];\n_videoJs2['default'].options.hls = _videoJs2['default'].options.hls || {};\nif (_videoJs2['default'].registerPlugin) {\n  _videoJs2['default'].registerPlugin('reloadSourceOnError', _reloadSourceOnError2['default']);\n} else {\n  _videoJs2['default'].plugin('reloadSourceOnError', _reloadSourceOnError2['default']);\n}\nmodule.exports = {\n  Hls: Hls,\n  HlsHandler: HlsHandler,\n  HlsSourceHandler: HlsSourceHandler\n};","map":{"version":3,"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_get","get","_x4","_x5","_x6","_again","_function","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","_interopRequireDefault","obj","__esModule","_classCallCheck","instance","TypeError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_globalDocument","require","_globalDocument2","_playlistLoader","_playlistLoader2","_playlist","_playlist2","_xhr","_xhr2","_aesDecrypter","_binUtils","_binUtils2","_videojsContribMediaSources","_m3u8Parser","_m3u8Parser2","_videoJs","_videoJs2","_masterPlaylistController","_config","_config2","_renditionMixin","_renditionMixin2","_globalWindow","_globalWindow2","_playbackWatcher","_playbackWatcher2","_reloadSourceOnError","_reloadSourceOnError2","_playlistSelectorsJs","Hls","PlaylistLoader","Playlist","Decrypter","AsyncStream","decrypt","utils","STANDARD_PLAYLIST_SELECTOR","lastBandwidthSelector","INITIAL_PLAYLIST_SELECTOR","lowestBitrateCompatibleVariantSelector","comparePlaylistBandwidth","comparePlaylistResolution","xhr","INITIAL_BANDWIDTH","forEach","prop","log","warn","set","handleHlsMediaChange","qualityLevels","playlistLoader","newPlaylist","media","selectedIndex","id","uri","selectedIndex_","trigger","type","handleHlsLoadedMetadata","hls","representations","rep","addQualityLevel","playlists","canPlaySource","supportsNativeHls","video","createElement","getTech","isSupported","canPlay","some","canItPlay","test","canPlayType","Component","getComponent","HlsHandler","_Component","source","tech","options","_this","options_","playerId","_player","hasOwnProperty","name","tech_","source_","stats","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","featuresNativeAudioTracks","Error","on","event","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","contains","el","masterPlaylistController_","fastQualityChange_","setCurrentTime","currentTime","pauseLoading","play","_this2","withCredentials","blacklistDuration","bandwidth","enableLowInitialPlaylist","option","src","_src","_this3","url","externHls","MasterPlaylistController","playbackWatcher_","mergeOptions","seekable","player","players","error","selectPlaylist","bind","selectInitialPlaylist","masterPlaylistLoader_","mediaSource","throughput","mainSegmentLoader_","rate","count","systemBandwidth","invBandwidth","invThroughput","systemBitrate","Math","floor","mediaRequests","mediaRequests_","mediaRequestsAborted","mediaRequestsAborted_","mediaRequestsTimedout","mediaRequestsTimedout_","mediaRequestsErrored","mediaRequestsErrored_","mediaTransferDuration","mediaTransferDuration_","mediaBytesTransferred","mediaBytesTransferred_","mediaSecondsLoaded","mediaSecondsLoaded_","one","setupFirstPlay","ready","setupQualityLevels_","URL","createObjectURL","_this4","qualityLevels_","duration","dispose","HlsSourceHandler","mode","canHandleSource","srcObj","arguments","localOptions","handleSource","setTimeout","browser","IE_VERSION","mpegurlRE","MediaSource","flashTech","supportsNativeMediaSources","registerSourceHandler","Uint8Array","use","registerComponent","m3u8","registerPlugin","plugin","module","exports"],"sources":["C:/Users/J3adl30y/Desktop/videostreaming/client/node_modules/videojs-contrib-hls/es5/videojs-contrib-hls.js"],"sourcesContent":["/**\n * @file videojs-contrib-hls.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-contrib-hls/blob/master/LICENSE\n */\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x4, _x5, _x6) { var _again = true; _function: while (_again) { var object = _x4, property = _x5, receiver = _x6; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x4 = parent; _x5 = property; _x6 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _globalDocument = require('global/document');\n\nvar _globalDocument2 = _interopRequireDefault(_globalDocument);\n\nvar _playlistLoader = require('./playlist-loader');\n\nvar _playlistLoader2 = _interopRequireDefault(_playlistLoader);\n\nvar _playlist = require('./playlist');\n\nvar _playlist2 = _interopRequireDefault(_playlist);\n\nvar _xhr = require('./xhr');\n\nvar _xhr2 = _interopRequireDefault(_xhr);\n\nvar _aesDecrypter = require('aes-decrypter');\n\nvar _binUtils = require('./bin-utils');\n\nvar _binUtils2 = _interopRequireDefault(_binUtils);\n\nvar _videojsContribMediaSources = require('videojs-contrib-media-sources');\n\nvar _m3u8Parser = require('m3u8-parser');\n\nvar _m3u8Parser2 = _interopRequireDefault(_m3u8Parser);\n\nvar _videoJs = require('video.js');\n\nvar _videoJs2 = _interopRequireDefault(_videoJs);\n\nvar _masterPlaylistController = require('./master-playlist-controller');\n\nvar _config = require('./config');\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _renditionMixin = require('./rendition-mixin');\n\nvar _renditionMixin2 = _interopRequireDefault(_renditionMixin);\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _playbackWatcher = require('./playback-watcher');\n\nvar _playbackWatcher2 = _interopRequireDefault(_playbackWatcher);\n\nvar _reloadSourceOnError = require('./reload-source-on-error');\n\nvar _reloadSourceOnError2 = _interopRequireDefault(_reloadSourceOnError);\n\nvar _playlistSelectorsJs = require('./playlist-selectors.js');\n\nvar Hls = {\n  PlaylistLoader: _playlistLoader2['default'],\n  Playlist: _playlist2['default'],\n  Decrypter: _aesDecrypter.Decrypter,\n  AsyncStream: _aesDecrypter.AsyncStream,\n  decrypt: _aesDecrypter.decrypt,\n  utils: _binUtils2['default'],\n\n  STANDARD_PLAYLIST_SELECTOR: _playlistSelectorsJs.lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: _playlistSelectorsJs.lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: _playlistSelectorsJs.comparePlaylistBandwidth,\n  comparePlaylistResolution: _playlistSelectorsJs.comparePlaylistResolution,\n\n  xhr: (0, _xhr2['default'])()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls, prop, {\n    get: function get() {\n      _videoJs2['default'].log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return _config2['default'][prop];\n    },\n    set: function set(value) {\n      _videoJs2['default'].log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        _videoJs2['default'].log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      _config2['default'][prop] = value;\n    }\n  });\n});\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls.canPlaySource = function () {\n  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls.supportsNativeHls = (function () {\n  var video = _globalDocument2['default'].createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!_videoJs2['default'].getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n})();\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls.isSupported = function () {\n  return _videoJs2['default'].log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component = _videoJs2['default'].getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = (function (_Component) {\n  _inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    var _this = this;\n\n    _classCallCheck(this, HlsHandler);\n\n    _get(Object.getPrototypeOf(HlsHandler.prototype), 'constructor', this).call(this, tech, options.hls);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = (0, _videoJs2['default'])(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get() {\n            _videoJs2['default'].log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n    }\n\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n\n    // overriding native HLS only works if audio tracks have been emulated\n    // error early if we're misconfigured:\n    if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    this.on(_globalDocument2['default'], ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = _globalDocument2['default'].fullscreenElement || _globalDocument2['default'].webkitFullscreenElement || _globalDocument2['default'].mozFullScreenElement || _globalDocument2['default'].msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    this.on(this.tech_, 'play', this.play);\n  }\n\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n  _createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth', 'handleManifestRedirects'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n  }, {\n    key: 'src',\n    value: function src(_src) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls;\n\n      this.masterPlaylistController_ = new _masterPlaylistController.MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new _playbackWatcher2['default'](_videoJs2['default'].mergeOptions(this.options_, {\n        seekable: function seekable() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = _videoJs2['default'].players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = undefined;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set() {\n            _videoJs2['default'].log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        (0, _renditionMixin2['default'])(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(_videoJs2['default'].URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = _videoJs2['default'].players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'duration',\n    value: function duration() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n  }, {\n    key: 'seekable',\n    value: function seekable() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n    * Abort all outstanding work and cleanup.\n    */\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      _get(Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n\n  return HlsHandler;\n})(Component);\n\nvar HlsSourceHandler = function HlsSourceHandler(mode) {\n  return {\n    canHandleSource: function canHandleSource(srcObj) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options);\n\n      // this forces video.js to skip this tech/mode if its not the one we have been\n      // overriden to use, by returing that we cannot handle the source.\n      if (localOptions.hls && localOptions.hls.mode && localOptions.hls.mode !== mode) {\n        return false;\n      }\n      return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource: function handleSource(source, tech) {\n      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options, { hls: { mode: mode } });\n\n      if (mode === 'flash') {\n        // We need to trigger this asynchronously to give others the chance\n        // to bind to the event when a source is set at player creation\n        tech.setTimeout(function () {\n          tech.trigger('loadstart');\n        }, 1);\n      }\n\n      tech.hls = new HlsHandler(source, tech, localOptions);\n      tech.hls.xhr = (0, _xhr2['default'])();\n\n      tech.hls.src(source.src);\n      return tech.hls;\n    },\n    canPlayType: function canPlayType(type) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      var localOptions = _videoJs2['default'].mergeOptions(_videoJs2['default'].options, options);\n\n      if (HlsSourceHandler.canPlayType(type, localOptions)) {\n        return 'maybe';\n      }\n      return '';\n    }\n  };\n};\n\nHlsSourceHandler.canPlayType = function (type, options) {\n  // No support for IE 10 or below\n  if (_videoJs2['default'].browser.IE_VERSION && _videoJs2['default'].browser.IE_VERSION <= 10) {\n    return false;\n  }\n\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  // favor native HLS support if it's available\n  if (!options.hls.overrideNative && Hls.supportsNativeHls) {\n    return false;\n  }\n  return mpegurlRE.test(type);\n};\n\nif (typeof _videoJs2['default'].MediaSource === 'undefined' || typeof _videoJs2['default'].URL === 'undefined') {\n  _videoJs2['default'].MediaSource = _videojsContribMediaSources.MediaSource;\n  _videoJs2['default'].URL = _videojsContribMediaSources.URL;\n}\n\nvar flashTech = _videoJs2['default'].getTech('Flash');\n\n// register source handlers with the appropriate techs\nif (_videojsContribMediaSources.MediaSource.supportsNativeMediaSources()) {\n  _videoJs2['default'].getTech('Html5').registerSourceHandler(HlsSourceHandler('html5'), 0);\n}\nif (_globalWindow2['default'].Uint8Array && flashTech) {\n  flashTech.registerSourceHandler(HlsSourceHandler('flash'));\n}\n\n_videoJs2['default'].HlsHandler = HlsHandler;\n_videoJs2['default'].HlsSourceHandler = HlsSourceHandler;\n_videoJs2['default'].Hls = Hls;\nif (!_videoJs2['default'].use) {\n  _videoJs2['default'].registerComponent('Hls', Hls);\n}\n_videoJs2['default'].m3u8 = _m3u8Parser2['default'];\n_videoJs2['default'].options.hls = _videoJs2['default'].options.hls || {};\n\nif (_videoJs2['default'].registerPlugin) {\n  _videoJs2['default'].registerPlugin('reloadSourceOnError', _reloadSourceOnError2['default']);\n} else {\n  _videoJs2['default'].plugin('reloadSourceOnError', _reloadSourceOnError2['default']);\n}\n\nmodule.exports = {\n  Hls: Hls,\n  HlsHandler: HlsHandler,\n  HlsSourceHandler: HlsSourceHandler\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}