{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J3adl30y\\\\Desktop\\\\videostreaminghttps\\\\client\\\\src\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [video, setVideo] = useState(null);\n  const [captions, setCaptions] = useState(null);\n  const [isScrubbing, setIsScrubbing] = useState(false);\n  const [wasPaused, setWasPaused] = useState(false);\n  const videoContainerRef = useRef(null);\n  useEffect(() => {\n    const videoElement = document.querySelector(\"video\");\n    setVideo(videoElement);\n    setCaptions(videoElement.textTracks[0]);\n  }, []);\n  const togglePlay = () => {\n    if (video.paused) {\n      video.play();\n    } else {\n      video.pause();\n    }\n  };\n  const toggleFullScreenMode = () => {\n    if (!document.fullscreenElement) {\n      videoContainerRef.current.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  };\n  const toggleTheaterMode = () => {\n    videoContainerRef.current.classList.toggle(\"theater\");\n  };\n  const toggleMiniPlayerMode = () => {\n    if (videoContainerRef.current.classList.contains(\"mini-player\")) {\n      document.exitPictureInPicture();\n    } else {\n      video.requestPictureInPicture();\n    }\n  };\n  const toggleMute = () => {\n    video.muted = !video.muted;\n  };\n  const toggleCaptions = () => {\n    const isHidden = captions.mode === \"hidden\";\n    captions.mode = isHidden ? \"showing\" : \"hidden\";\n    videoContainerRef.current.classList.toggle(\"captions\", isHidden);\n  };\n  const formatDuration = time => {\n    const seconds = Math.floor(time % 60);\n    const minutes = Math.floor(time / 60) % 60;\n    const hours = Math.floor(time / 3600);\n    const leadingZeroFormatter = new Intl.NumberFormat(undefined, {\n      minimumIntegerDigits: 2\n    });\n    if (hours === 0) {\n      return `${minutes}:${leadingZeroFormatter.format(seconds)}`;\n    } else {\n      return `${hours}:${leadingZeroFormatter.format(minutes)}:${leadingZeroFormatter.format(seconds)}`;\n    }\n  };\n\n  // Other event handlers and functions go here...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: videoContainerRef,\n    className: \"video-container\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      src: \"assets/Video.mp4\",\n      children: /*#__PURE__*/_jsxDEV(\"track\", {\n        kind: \"captions\",\n        srclang: \"en\",\n        src: \"assets/subtitles.vtt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"1IjDBgpx/e1ryDEfmxTKE0hHFiU=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","VideoPlayer","_s","video","setVideo","captions","setCaptions","isScrubbing","setIsScrubbing","wasPaused","setWasPaused","videoContainerRef","videoElement","document","querySelector","textTracks","togglePlay","paused","play","pause","toggleFullScreenMode","fullscreenElement","current","requestFullscreen","exitFullscreen","toggleTheaterMode","classList","toggle","toggleMiniPlayerMode","contains","exitPictureInPicture","requestPictureInPicture","toggleMute","muted","toggleCaptions","isHidden","mode","formatDuration","time","seconds","Math","floor","minutes","hours","leadingZeroFormatter","Intl","NumberFormat","undefined","minimumIntegerDigits","format","ref","className","children","src","kind","srclang","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/J3adl30y/Desktop/videostreaminghttps/client/src/VideoPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst VideoPlayer = () => {\r\n  const [video, setVideo] = useState(null);\r\n  const [captions, setCaptions] = useState(null);\r\n  const [isScrubbing, setIsScrubbing] = useState(false);\r\n  const [wasPaused, setWasPaused] = useState(false);\r\n  const videoContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const videoElement = document.querySelector(\"video\");\r\n    setVideo(videoElement);\r\n    setCaptions(videoElement.textTracks[0]);\r\n  }, []);\r\n\r\n  const togglePlay = () => {\r\n    if (video.paused) {\r\n      video.play();\r\n    } else {\r\n      video.pause();\r\n    }\r\n  };\r\n\r\n  const toggleFullScreenMode = () => {\r\n    if (!document.fullscreenElement) {\r\n      videoContainerRef.current.requestFullscreen();\r\n    } else {\r\n      document.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  const toggleTheaterMode = () => {\r\n    videoContainerRef.current.classList.toggle(\"theater\");\r\n  };\r\n\r\n  const toggleMiniPlayerMode = () => {\r\n    if (videoContainerRef.current.classList.contains(\"mini-player\")) {\r\n      document.exitPictureInPicture();\r\n    } else {\r\n      video.requestPictureInPicture();\r\n    }\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    video.muted = !video.muted;\r\n  };\r\n\r\n  const toggleCaptions = () => {\r\n    const isHidden = captions.mode === \"hidden\";\r\n    captions.mode = isHidden ? \"showing\" : \"hidden\";\r\n    videoContainerRef.current.classList.toggle(\"captions\", isHidden);\r\n  };\r\n\r\n  const formatDuration = (time) => {\r\n    const seconds = Math.floor(time % 60);\r\n    const minutes = Math.floor(time / 60) % 60;\r\n    const hours = Math.floor(time / 3600);\r\n    const leadingZeroFormatter = new Intl.NumberFormat(undefined, {\r\n      minimumIntegerDigits: 2,\r\n    });\r\n    if (hours === 0) {\r\n      return `${minutes}:${leadingZeroFormatter.format(seconds)}`;\r\n    } else {\r\n      return `${hours}:${leadingZeroFormatter.format(\r\n        minutes\r\n      )}:${leadingZeroFormatter.format(seconds)}`;\r\n    }\r\n  };\r\n\r\n  // Other event handlers and functions go here...\r\n\r\n  return (\r\n    <div ref={videoContainerRef} className=\"video-container\">\r\n      <video src=\"assets/Video.mp4\">\r\n        <track kind=\"captions\" srclang=\"en\" src=\"assets/subtitles.vtt\" />\r\n      </video>\r\n      {/* Other HTML elements */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}