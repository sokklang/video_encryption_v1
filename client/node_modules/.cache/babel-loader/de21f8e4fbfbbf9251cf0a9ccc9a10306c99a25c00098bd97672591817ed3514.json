{"ast":null,"code":"/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\nvar MAX_TS = 8589934592;\nvar RO_THRESH = 4294967296;\nvar handleRollover = function (value, reference) {\n  var direction = 1;\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += direction * MAX_TS;\n  }\n  return value;\n};\nvar TimestampRolloverStream = function (type) {\n  var lastDTS, referenceDTS;\n  TimestampRolloverStream.prototype.init.call(this);\n  this.type_ = type;\n  this.push = function (data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n    lastDTS = data.dts;\n    this.trigger('data', data);\n  };\n  this.flush = function () {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n  this.discontinuity = function () {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n};\nTimestampRolloverStream.prototype = new Stream();\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};","map":{"version":3,"names":["Stream","require","MAX_TS","RO_THRESH","handleRollover","value","reference","direction","Math","abs","TimestampRolloverStream","type","lastDTS","referenceDTS","prototype","init","call","type_","push","data","undefined","dts","pts","trigger","flush","discontinuity","module","exports"],"sources":["C:/Users/J3adl30y/Desktop/videostreaming/client/node_modules/videojs-contrib-media-sources/node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js"],"sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAEvC,IAAIC,MAAM,GAAG,UAAU;AAEvB,IAAIC,SAAS,GAAG,UAAU;AAE1B,IAAIC,cAAc,GAAG,SAAAA,CAASC,KAAK,EAAEC,SAAS,EAAE;EAC9C,IAAIC,SAAS,GAAG,CAAC;EAEjB,IAAIF,KAAK,GAAGC,SAAS,EAAE;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,SAAS,GAAG,CAAC,CAAC;EAChB;;EAEA;EACA;EACA,OAAOC,IAAI,CAACC,GAAG,CAACH,SAAS,GAAGD,KAAK,CAAC,GAAGF,SAAS,EAAE;IAC9CE,KAAK,IAAKE,SAAS,GAAGL,MAAO;EAC/B;EAEA,OAAOG,KAAK;AACd,CAAC;AAED,IAAIK,uBAAuB,GAAG,SAAAA,CAASC,IAAI,EAAE;EAC3C,IAAIC,OAAO,EAAEC,YAAY;EAEzBH,uBAAuB,CAACI,SAAS,CAACC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;EAEjD,IAAI,CAACC,KAAK,GAAGN,IAAI;EAEjB,IAAI,CAACO,IAAI,GAAG,UAASC,IAAI,EAAE;IACzB,IAAIA,IAAI,CAACR,IAAI,KAAK,IAAI,CAACM,KAAK,EAAE;MAC5B;IACF;IAEA,IAAIJ,YAAY,KAAKO,SAAS,EAAE;MAC9BP,YAAY,GAAGM,IAAI,CAACE,GAAG;IACzB;IAEAF,IAAI,CAACE,GAAG,GAAGjB,cAAc,CAACe,IAAI,CAACE,GAAG,EAAER,YAAY,CAAC;IACjDM,IAAI,CAACG,GAAG,GAAGlB,cAAc,CAACe,IAAI,CAACG,GAAG,EAAET,YAAY,CAAC;IAEjDD,OAAO,GAAGO,IAAI,CAACE,GAAG;IAElB,IAAI,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAAC;EAC5B,CAAC;EAED,IAAI,CAACK,KAAK,GAAG,YAAW;IACtBX,YAAY,GAAGD,OAAO;IACtB,IAAI,CAACW,OAAO,CAAC,MAAM,CAAC;EACtB,CAAC;EAED,IAAI,CAACE,aAAa,GAAG,YAAW;IAC9BZ,YAAY,GAAG,KAAK,CAAC;IACrBD,OAAO,GAAG,KAAK,CAAC;EAClB,CAAC;AAEH,CAAC;AAEDF,uBAAuB,CAACI,SAAS,GAAG,IAAId,MAAM,CAAC,CAAC;AAEhD0B,MAAM,CAACC,OAAO,GAAG;EACfjB,uBAAuB,EAAEA,uBAAuB;EAChDN,cAAc,EAAEA;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}