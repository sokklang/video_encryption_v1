{"ast":null,"code":"/**\n * @file flash-transmuxer-worker.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\nvar _globalWindow = require('global/window');\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\nvar _muxJsLibFlv = require('mux.js/lib/flv');\nvar _muxJsLibFlv2 = _interopRequireDefault(_muxJsLibFlv);\n\n/**\n * Re-emits transmuxer events by converting them into messages to the\n * world outside the worker.\n *\n * @param {Object} transmuxer the transmuxer to wire events on\n * @private\n */\nvar wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n  transmuxer.on('data', function (segment) {\n    _globalWindow2['default'].postMessage({\n      action: 'data',\n      segment: segment\n    });\n  });\n  transmuxer.on('done', function (data) {\n    _globalWindow2['default'].postMessage({\n      action: 'done'\n    });\n  });\n};\n\n/**\n * All incoming messages route through this hash. If no function exists\n * to handle an incoming message, then we ignore the message.\n *\n * @class MessageHandlers\n * @param {Object} options the options to initialize with\n */\n\nvar MessageHandlers = function () {\n  function MessageHandlers(options) {\n    _classCallCheck(this, MessageHandlers);\n    this.options = options || {};\n    this.init();\n  }\n\n  /**\n   * Our web wroker interface so that things can talk to mux.js\n   * that will be running in a web worker. The scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  /**\n   * initialize our web worker and wire all the events.\n   */\n\n  _createClass(MessageHandlers, [{\n    key: 'init',\n    value: function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new _muxJsLibFlv2['default'].Transmuxer(this.options);\n      wireTransmuxerEvents(this.transmuxer);\n    }\n\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n  }, {\n    key: 'push',\n    value: function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.init();\n    }\n\n    /**\n     * Forces the pipeline to finish processing the last segment and emit its\n     * results.\n     */\n  }, {\n    key: 'flush',\n    value: function flush() {\n      this.transmuxer.flush();\n    }\n  }, {\n    key: 'resetCaptions',\n    value: function resetCaptions() {\n      this.transmuxer.resetCaptions();\n    }\n  }]);\n  return MessageHandlers;\n}();\nvar FlashTransmuxerWorker = function FlashTransmuxerWorker(self) {\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers();\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n};\nexports['default'] = function (self) {\n  return new FlashTransmuxerWorker(self);\n};\nmodule.exports = exports['default'];","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_interopRequireDefault","obj","__esModule","_classCallCheck","instance","TypeError","_globalWindow","require","_globalWindow2","_muxJsLibFlv","_muxJsLibFlv2","wireTransmuxerEvents","transmuxer","on","segment","postMessage","action","data","MessageHandlers","options","init","dispose","Transmuxer","push","Uint8Array","byteOffset","byteLength","reset","flush","resetCaptions","FlashTransmuxerWorker","self","onmessage","event","messageHandlers","module"],"sources":["C:/Users/J3adl30y/Desktop/videostreaming/client/node_modules/videojs-contrib-media-sources/es5/flash-transmuxer-worker.js"],"sourcesContent":["/**\n * @file flash-transmuxer-worker.js\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _globalWindow = require('global/window');\n\nvar _globalWindow2 = _interopRequireDefault(_globalWindow);\n\nvar _muxJsLibFlv = require('mux.js/lib/flv');\n\nvar _muxJsLibFlv2 = _interopRequireDefault(_muxJsLibFlv);\n\n/**\n * Re-emits transmuxer events by converting them into messages to the\n * world outside the worker.\n *\n * @param {Object} transmuxer the transmuxer to wire events on\n * @private\n */\nvar wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n  transmuxer.on('data', function (segment) {\n    _globalWindow2['default'].postMessage({\n      action: 'data',\n      segment: segment\n    });\n  });\n\n  transmuxer.on('done', function (data) {\n    _globalWindow2['default'].postMessage({ action: 'done' });\n  });\n};\n\n/**\n * All incoming messages route through this hash. If no function exists\n * to handle an incoming message, then we ignore the message.\n *\n * @class MessageHandlers\n * @param {Object} options the options to initialize with\n */\n\nvar MessageHandlers = (function () {\n  function MessageHandlers(options) {\n    _classCallCheck(this, MessageHandlers);\n\n    this.options = options || {};\n    this.init();\n  }\n\n  /**\n   * Our web wroker interface so that things can talk to mux.js\n   * that will be running in a web worker. The scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  /**\n   * initialize our web worker and wire all the events.\n   */\n\n  _createClass(MessageHandlers, [{\n    key: 'init',\n    value: function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new _muxJsLibFlv2['default'].Transmuxer(this.options);\n      wireTransmuxerEvents(this.transmuxer);\n    }\n\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n  }, {\n    key: 'push',\n    value: function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n      this.transmuxer.push(segment);\n    }\n\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.init();\n    }\n\n    /**\n     * Forces the pipeline to finish processing the last segment and emit its\n     * results.\n     */\n  }, {\n    key: 'flush',\n    value: function flush() {\n      this.transmuxer.flush();\n    }\n  }, {\n    key: 'resetCaptions',\n    value: function resetCaptions() {\n      this.transmuxer.resetCaptions();\n    }\n  }]);\n\n  return MessageHandlers;\n})();\n\nvar FlashTransmuxerWorker = function FlashTransmuxerWorker(self) {\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(event.data.options);\n      return;\n    }\n\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers();\n    }\n\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n};\n\nexports['default'] = function (self) {\n  return new FlashTransmuxerWorker(self);\n};\n\nmodule.exports = exports['default'];"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}