{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _stream = require('./stream');\nvar _stream2 = _interopRequireDefault(_stream);\nvar _lineStream = require('./line-stream');\nvar _lineStream2 = _interopRequireDefault(_lineStream);\nvar _parseStream = require('./parse-stream');\nvar _parseStream2 = _interopRequireDefault(_parseStream);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} /**\n   * @file m3u8/parser.js\n   */\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\nvar Parser = function (_Stream) {\n  _inherits(Parser, _Stream);\n  function Parser() {\n    _classCallCheck(this, Parser);\n    var _this = _possibleConstructorReturn(this, (Parser.__proto__ || Object.getPrototypeOf(Parser)).call(this));\n    _this.lineStream = new _lineStream2['default']();\n    _this.parseStream = new _parseStream2['default']();\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              this.manifest.dateTimeString = entry.dateTimeString;\n              this.manifest.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n  _createClass(Parser, [{\n    key: 'push',\n    value: function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n  }, {\n    key: 'end',\n    value: function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n    }\n  }]);\n  return Parser;\n}(_stream2['default']);\nexports['default'] = Parser;","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_stream","require","_stream2","_interopRequireDefault","_lineStream","_lineStream2","_parseStream","_parseStream2","obj","__esModule","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Parser","_Stream","_this","getPrototypeOf","lineStream","parseStream","pipe","uris","currentUri","currentMap","_key","noop","defaultMediaGroups","currentTimeline","manifest","allowCache","discontinuityStarts","segments","on","entry","mediaGroup","rendition","tag","allowed","trigger","message","byterange","offset","endlist","endList","inf","mediaSequence","discontinuitySequence","duration","attributes","METHOD","URI","method","uri","IV","iv","isFinite","number","playlistType","test","playlist","map","streamInf","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","push","programDateTime","dateTimeString","dateTimeObject","targetduration","targetDuration","totalduration","totalDuration","cueOut","data","cueOutCont","cueIn","tagType","timeline","comment","type","chunk","end"],"sources":["C:/Users/J3adl30y/Desktop/videostreaming/client/node_modules/videojs-contrib-hls/node_modules/m3u8-parser/es5/parser.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('./stream');\n\nvar _stream2 = _interopRequireDefault(_stream);\n\nvar _lineStream = require('./line-stream');\n\nvar _lineStream2 = _interopRequireDefault(_lineStream);\n\nvar _parseStream = require('./parse-stream');\n\nvar _parseStream2 = _interopRequireDefault(_parseStream);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @file m3u8/parser.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\nvar Parser = function (_Stream) {\n  _inherits(Parser, _Stream);\n\n  function Parser() {\n    _classCallCheck(this, Parser);\n\n    var _this = _possibleConstructorReturn(this, (Parser.__proto__ || Object.getPrototypeOf(Parser)).call(this));\n\n    _this.lineStream = new _lineStream2['default']();\n    _this.parseStream = new _parseStream2['default']();\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              this.manifest.dateTimeString = entry.dateTimeString;\n              this.manifest.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  _createClass(Parser, [{\n    key: 'push',\n    value: function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n\n  }, {\n    key: 'end',\n    value: function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n    }\n  }]);\n\n  return Parser;\n}(_stream2['default']);\n\nexports['default'] = Parser;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAM,IAAI,UAAUC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;MAAE,IAAIV,MAAM,CAACY,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;QAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;MAAE;IAAE;EAAE;EAAE,OAAOL,MAAM;AAAE,CAAC;AAEhQ,IAAIS,YAAY,GAAG,YAAY;EAAE,SAASC,gBAAgBA,CAACV,MAAM,EAAEW,KAAK,EAAE;IAAE,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGU,KAAK,CAACR,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE,IAAIW,UAAU,GAAGD,KAAK,CAACV,CAAC,CAAC;MAAEW,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;MAAED,UAAU,CAACE,YAAY,GAAG,IAAI;MAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;MAAErB,MAAM,CAACC,cAAc,CAACK,MAAM,EAAEY,UAAU,CAACP,GAAG,EAAEO,UAAU,CAAC;IAAE;EAAE;EAAE,OAAO,UAAUI,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAE;IAAE,IAAID,UAAU,EAAEP,gBAAgB,CAACM,WAAW,CAACV,SAAS,EAAEW,UAAU,CAAC;IAAE,IAAIC,WAAW,EAAER,gBAAgB,CAACM,WAAW,EAAEE,WAAW,CAAC;IAAE,OAAOF,WAAW;EAAE,CAAC;AAAE,CAAC,CAAC,CAAC;AAEnjB,IAAIG,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEjC,IAAIC,QAAQ,GAAGC,sBAAsB,CAACH,OAAO,CAAC;AAE9C,IAAII,WAAW,GAAGH,OAAO,CAAC,eAAe,CAAC;AAE1C,IAAII,YAAY,GAAGF,sBAAsB,CAACC,WAAW,CAAC;AAEtD,IAAIE,YAAY,GAAGL,OAAO,CAAC,gBAAgB,CAAC;AAE5C,IAAIM,aAAa,GAAGJ,sBAAsB,CAACG,YAAY,CAAC;AAExD,SAASH,sBAAsBA,CAACK,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAAE;AAEhG,SAASE,eAAeA,CAACC,QAAQ,EAAEd,WAAW,EAAE;EAAE,IAAI,EAAEc,QAAQ,YAAYd,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIe,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASC,0BAA0BA,CAACC,IAAI,EAAEzB,IAAI,EAAE;EAAE,IAAI,CAACyB,IAAI,EAAE;IAAE,MAAM,IAAIC,cAAc,CAAC,2DAA2D,CAAC;EAAE;EAAE,OAAO1B,IAAI,KAAK,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAU,CAAC,GAAGA,IAAI,GAAGyB,IAAI;AAAE;AAE/O,SAASE,SAASA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAAE,IAAI,OAAOA,UAAU,KAAK,UAAU,IAAIA,UAAU,KAAK,IAAI,EAAE;IAAE,MAAM,IAAIN,SAAS,CAAC,0DAA0D,GAAG,OAAOM,UAAU,CAAC;EAAE;EAAED,QAAQ,CAAC9B,SAAS,GAAGZ,MAAM,CAAC4C,MAAM,CAACD,UAAU,IAAIA,UAAU,CAAC/B,SAAS,EAAE;IAAEiC,WAAW,EAAE;MAAE1C,KAAK,EAAEuC,QAAQ;MAAEvB,UAAU,EAAE,KAAK;MAAEE,QAAQ,EAAE,IAAI;MAAED,YAAY,EAAE;IAAK;EAAE,CAAC,CAAC;EAAE,IAAIuB,UAAU,EAAE3C,MAAM,CAAC8C,cAAc,GAAG9C,MAAM,CAAC8C,cAAc,CAACJ,QAAQ,EAAEC,UAAU,CAAC,GAAGD,QAAQ,CAACK,SAAS,GAAGJ,UAAU;AAAE,CAAC,CAAC;AAC/e;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,MAAM,GAAG,UAAUC,OAAO,EAAE;EAC9BR,SAAS,CAACO,MAAM,EAAEC,OAAO,CAAC;EAE1B,SAASD,MAAMA,CAAA,EAAG;IAChBb,eAAe,CAAC,IAAI,EAAEa,MAAM,CAAC;IAE7B,IAAIE,KAAK,GAAGZ,0BAA0B,CAAC,IAAI,EAAE,CAACU,MAAM,CAACD,SAAS,IAAI/C,MAAM,CAACmD,cAAc,CAACH,MAAM,CAAC,EAAElC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE5GoC,KAAK,CAACE,UAAU,GAAG,IAAItB,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC;IAChDoB,KAAK,CAACG,WAAW,GAAG,IAAIrB,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;IAClDkB,KAAK,CAACE,UAAU,CAACE,IAAI,CAACJ,KAAK,CAACG,WAAW,CAAC;IACxC;IACA,IAAId,IAAI,GAAGW,KAAK;IAChB;IACA,IAAIK,IAAI,GAAG,EAAE;IACb,IAAIC,UAAU,GAAG,CAAC,CAAC;IACnB;IACA,IAAIC,UAAU,GAAG,KAAK,CAAC;IACvB;IACA,IAAIC,IAAI,GAAG,KAAK,CAAC;IACjB,IAAIC,IAAI,GAAG,SAASA,IAAIA,CAAA,EAAG,CAAC,CAAC;IAC7B,IAAIC,kBAAkB,GAAG;MACvB,OAAO,EAAE,CAAC,CAAC;MACX,OAAO,EAAE,CAAC,CAAC;MACX,iBAAiB,EAAE,CAAC,CAAC;MACrB,WAAW,EAAE,CAAC;IAChB,CAAC;IACD;IACA,IAAIC,eAAe,GAAG,CAAC;;IAEvB;IACAX,KAAK,CAACY,QAAQ,GAAG;MACfC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,EAAE;MACvBC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACAf,KAAK,CAACG,WAAW,CAACa,EAAE,CAAC,MAAM,EAAE,UAAUC,KAAK,EAAE;MAC5C,IAAIC,UAAU,GAAG,KAAK,CAAC;MACvB,IAAIC,SAAS,GAAG,KAAK,CAAC;MAEtB,CAAC;QACCC,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;UAClB;UACA,CAAC,CAAC;YACA,aAAa,EAAE,SAASP,UAAUA,CAAA,EAAG;cACnC,IAAI,CAACD,QAAQ,CAACC,UAAU,GAAGI,KAAK,CAACI,OAAO;cACxC,IAAI,EAAE,SAAS,IAAIJ,KAAK,CAAC,EAAE;gBACzB,IAAI,CAACK,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF,IAAI,CAACX,QAAQ,CAACC,UAAU,GAAG,IAAI;cACjC;YACF,CAAC;YACDW,SAAS,EAAE,SAASA,SAASA,CAAA,EAAG;cAC9B,IAAIA,SAAS,GAAG,CAAC,CAAC;cAElB,IAAI,QAAQ,IAAIP,KAAK,EAAE;gBACrBX,UAAU,CAACkB,SAAS,GAAGA,SAAS;gBAChCA,SAAS,CAACjE,MAAM,GAAG0D,KAAK,CAAC1D,MAAM;gBAE/B,IAAI,EAAE,QAAQ,IAAI0D,KAAK,CAAC,EAAE;kBACxB,IAAI,CAACK,OAAO,CAAC,MAAM,EAAE;oBACnBC,OAAO,EAAE;kBACX,CAAC,CAAC;kBACFN,KAAK,CAACQ,MAAM,GAAG,CAAC;gBAClB;cACF;cACA,IAAI,QAAQ,IAAIR,KAAK,EAAE;gBACrBX,UAAU,CAACkB,SAAS,GAAGA,SAAS;gBAChCA,SAAS,CAACC,MAAM,GAAGR,KAAK,CAACQ,MAAM;cACjC;YACF,CAAC;YACDC,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;cAC1B,IAAI,CAACd,QAAQ,CAACe,OAAO,GAAG,IAAI;YAC9B,CAAC;YACDC,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;cAClB,IAAI,EAAE,eAAe,IAAI,IAAI,CAAChB,QAAQ,CAAC,EAAE;gBACvC,IAAI,CAACA,QAAQ,CAACiB,aAAa,GAAG,CAAC;gBAC/B,IAAI,CAACP,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;cACA,IAAI,EAAE,uBAAuB,IAAI,IAAI,CAACX,QAAQ,CAAC,EAAE;gBAC/C,IAAI,CAACA,QAAQ,CAACkB,qBAAqB,GAAG,CAAC;gBACvC,IAAI,CAACR,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;cACA,IAAIN,KAAK,CAACc,QAAQ,GAAG,CAAC,EAAE;gBACtBzB,UAAU,CAACyB,QAAQ,GAAGd,KAAK,CAACc,QAAQ;cACtC;cAEA,IAAId,KAAK,CAACc,QAAQ,KAAK,CAAC,EAAE;gBACxBzB,UAAU,CAACyB,QAAQ,GAAG,IAAI;gBAC1B,IAAI,CAACT,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;cAEA,IAAI,CAACX,QAAQ,CAACG,QAAQ,GAAGV,IAAI;YAC/B,CAAC;YACD5C,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;cAClB,IAAI,CAACwD,KAAK,CAACe,UAAU,EAAE;gBACrB,IAAI,CAACV,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF;cACA;cACA,IAAIN,KAAK,CAACe,UAAU,CAACC,MAAM,KAAK,MAAM,EAAE;gBACtCzB,IAAI,GAAG,IAAI;gBACX;cACF;cACA,IAAI,CAACS,KAAK,CAACe,UAAU,CAACE,GAAG,EAAE;gBACzB,IAAI,CAACZ,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF;cACA,IAAI,CAACN,KAAK,CAACe,UAAU,CAACC,MAAM,EAAE;gBAC5B,IAAI,CAACX,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ;;cAEA;cACAf,IAAI,GAAG;gBACL2B,MAAM,EAAElB,KAAK,CAACe,UAAU,CAACC,MAAM,IAAI,SAAS;gBAC5CG,GAAG,EAAEnB,KAAK,CAACe,UAAU,CAACE;cACxB,CAAC;cAED,IAAI,OAAOjB,KAAK,CAACe,UAAU,CAACK,EAAE,KAAK,WAAW,EAAE;gBAC9C7B,IAAI,CAAC8B,EAAE,GAAGrB,KAAK,CAACe,UAAU,CAACK,EAAE;cAC/B;YACF,CAAC;YACD,gBAAgB,EAAE,SAASR,aAAaA,CAAA,EAAG;cACzC,IAAI,CAACU,QAAQ,CAACtB,KAAK,CAACuB,MAAM,CAAC,EAAE;gBAC3B,IAAI,CAAClB,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE,mCAAmC,GAAGN,KAAK,CAACuB;gBACvD,CAAC,CAAC;gBACF;cACF;cACA,IAAI,CAAC5B,QAAQ,CAACiB,aAAa,GAAGZ,KAAK,CAACuB,MAAM;YAC5C,CAAC;YACD,wBAAwB,EAAE,SAASV,qBAAqBA,CAAA,EAAG;cACzD,IAAI,CAACS,QAAQ,CAACtB,KAAK,CAACuB,MAAM,CAAC,EAAE;gBAC3B,IAAI,CAAClB,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE,2CAA2C,GAAGN,KAAK,CAACuB;gBAC/D,CAAC,CAAC;gBACF;cACF;cACA,IAAI,CAAC5B,QAAQ,CAACkB,qBAAqB,GAAGb,KAAK,CAACuB,MAAM;cAClD7B,eAAe,GAAGM,KAAK,CAACuB,MAAM;YAChC,CAAC;YACD,eAAe,EAAE,SAASC,YAAYA,CAAA,EAAG;cACvC,IAAI,CAAC,WAAW,CAACC,IAAI,CAACzB,KAAK,CAACwB,YAAY,CAAC,EAAE;gBACzC,IAAI,CAACnB,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE,kCAAkC,GAAGN,KAAK,CAAC0B;gBACtD,CAAC,CAAC;gBACF;cACF;cACA,IAAI,CAAC/B,QAAQ,CAAC6B,YAAY,GAAGxB,KAAK,CAACwB,YAAY;YACjD,CAAC;YACDG,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;cAClBrC,UAAU,GAAG,CAAC,CAAC;cACf,IAAIU,KAAK,CAACmB,GAAG,EAAE;gBACb7B,UAAU,CAAC6B,GAAG,GAAGnB,KAAK,CAACmB,GAAG;cAC5B;cACA,IAAInB,KAAK,CAACO,SAAS,EAAE;gBACnBjB,UAAU,CAACiB,SAAS,GAAGP,KAAK,CAACO,SAAS;cACxC;YACF,CAAC;YACD,YAAY,EAAE,SAASqB,SAASA,CAAA,EAAG;cACjC,IAAI,CAACjC,QAAQ,CAACkC,SAAS,GAAGzC,IAAI;cAC9B,IAAI,CAACO,QAAQ,CAACmC,WAAW,GAAG,IAAI,CAACnC,QAAQ,CAACmC,WAAW,IAAIrC,kBAAkB;cAE3E,IAAI,CAACO,KAAK,CAACe,UAAU,EAAE;gBACrB,IAAI,CAACV,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF;cAEA,IAAI,CAACjB,UAAU,CAAC0B,UAAU,EAAE;gBAC1B1B,UAAU,CAAC0B,UAAU,GAAG,CAAC,CAAC;cAC5B;cACA9E,QAAQ,CAACoD,UAAU,CAAC0B,UAAU,EAAEf,KAAK,CAACe,UAAU,CAAC;YACnD,CAAC;YACDgB,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;cACtB,IAAI,CAACpC,QAAQ,CAACmC,WAAW,GAAG,IAAI,CAACnC,QAAQ,CAACmC,WAAW,IAAIrC,kBAAkB;cAE3E,IAAI,EAAEO,KAAK,CAACe,UAAU,IAAIf,KAAK,CAACe,UAAU,CAACiB,IAAI,IAAIhC,KAAK,CAACe,UAAU,CAAC,UAAU,CAAC,IAAIf,KAAK,CAACe,UAAU,CAACkB,IAAI,CAAC,EAAE;gBACzG,IAAI,CAAC5B,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE;gBACX,CAAC,CAAC;gBACF;cACF;;cAEA;cACA,IAAI4B,cAAc,GAAG,IAAI,CAACvC,QAAQ,CAACmC,WAAW,CAAC9B,KAAK,CAACe,UAAU,CAACiB,IAAI,CAAC;cAErEE,cAAc,CAAClC,KAAK,CAACe,UAAU,CAAC,UAAU,CAAC,CAAC,GAAGmB,cAAc,CAAClC,KAAK,CAACe,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;cACjGd,UAAU,GAAGiC,cAAc,CAAClC,KAAK,CAACe,UAAU,CAAC,UAAU,CAAC,CAAC;;cAEzD;cACAb,SAAS,GAAG;gBACV,SAAS,EAAE,MAAM,CAACuB,IAAI,CAACzB,KAAK,CAACe,UAAU,CAACoB,OAAO;cACjD,CAAC;cACD,IAAIjC,SAAS,CAAC,SAAS,CAAC,EAAE;gBACxBA,SAAS,CAACkC,UAAU,GAAG,IAAI;cAC7B,CAAC,MAAM;gBACLlC,SAAS,CAACkC,UAAU,GAAG,MAAM,CAACX,IAAI,CAACzB,KAAK,CAACe,UAAU,CAACsB,UAAU,CAAC;cACjE;cACA,IAAIrC,KAAK,CAACe,UAAU,CAACuB,QAAQ,EAAE;gBAC7BpC,SAAS,CAACqC,QAAQ,GAAGvC,KAAK,CAACe,UAAU,CAACuB,QAAQ;cAChD;cACA,IAAItC,KAAK,CAACe,UAAU,CAACE,GAAG,EAAE;gBACxBf,SAAS,CAACiB,GAAG,GAAGnB,KAAK,CAACe,UAAU,CAACE,GAAG;cACtC;cACA,IAAIjB,KAAK,CAACe,UAAU,CAAC,aAAa,CAAC,EAAE;gBACnCb,SAAS,CAACsC,UAAU,GAAGxC,KAAK,CAACe,UAAU,CAAC,aAAa,CAAC;cACxD;cACA,IAAIf,KAAK,CAACe,UAAU,CAAC0B,eAAe,EAAE;gBACpCvC,SAAS,CAACwC,eAAe,GAAG1C,KAAK,CAACe,UAAU,CAAC0B,eAAe;cAC9D;cACA,IAAIzC,KAAK,CAACe,UAAU,CAAC4B,MAAM,EAAE;gBAC3BzC,SAAS,CAAC0C,MAAM,GAAG,MAAM,CAACnB,IAAI,CAACzB,KAAK,CAACe,UAAU,CAAC4B,MAAM,CAAC;cACzD;;cAEA;cACA1C,UAAU,CAACD,KAAK,CAACe,UAAU,CAACkB,IAAI,CAAC,GAAG/B,SAAS;YAC/C,CAAC;YACD2C,aAAa,EAAE,SAASA,aAAaA,CAAA,EAAG;cACtCnD,eAAe,IAAI,CAAC;cACpBL,UAAU,CAACwD,aAAa,GAAG,IAAI;cAC/B,IAAI,CAAClD,QAAQ,CAACE,mBAAmB,CAACiD,IAAI,CAAC1D,IAAI,CAAC9C,MAAM,CAAC;YACrD,CAAC;YACD,mBAAmB,EAAE,SAASyG,eAAeA,CAAA,EAAG;cAC9C,IAAI,CAACpD,QAAQ,CAACqD,cAAc,GAAGhD,KAAK,CAACgD,cAAc;cACnD,IAAI,CAACrD,QAAQ,CAACsD,cAAc,GAAGjD,KAAK,CAACiD,cAAc;YACrD,CAAC;YACDC,cAAc,EAAE,SAASA,cAAcA,CAAA,EAAG;cACxC,IAAI,CAAC5B,QAAQ,CAACtB,KAAK,CAACc,QAAQ,CAAC,IAAId,KAAK,CAACc,QAAQ,GAAG,CAAC,EAAE;gBACnD,IAAI,CAACT,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE,oCAAoC,GAAGN,KAAK,CAACc;gBACxD,CAAC,CAAC;gBACF;cACF;cACA,IAAI,CAACnB,QAAQ,CAACwD,cAAc,GAAGnD,KAAK,CAACc,QAAQ;YAC/C,CAAC;YACDsC,aAAa,EAAE,SAASA,aAAaA,CAAA,EAAG;cACtC,IAAI,CAAC9B,QAAQ,CAACtB,KAAK,CAACc,QAAQ,CAAC,IAAId,KAAK,CAACc,QAAQ,GAAG,CAAC,EAAE;gBACnD,IAAI,CAACT,OAAO,CAAC,MAAM,EAAE;kBACnBC,OAAO,EAAE,mCAAmC,GAAGN,KAAK,CAACc;gBACvD,CAAC,CAAC;gBACF;cACF;cACA,IAAI,CAACnB,QAAQ,CAAC0D,aAAa,GAAGrD,KAAK,CAACc,QAAQ;YAC9C,CAAC;YACD,SAAS,EAAE,SAASwC,MAAMA,CAAA,EAAG;cAC3BjE,UAAU,CAACiE,MAAM,GAAGtD,KAAK,CAACuD,IAAI;YAChC,CAAC;YACD,cAAc,EAAE,SAASC,UAAUA,CAAA,EAAG;cACpCnE,UAAU,CAACmE,UAAU,GAAGxD,KAAK,CAACuD,IAAI;YACpC,CAAC;YACD,QAAQ,EAAE,SAASE,KAAKA,CAAA,EAAG;cACzBpE,UAAU,CAACoE,KAAK,GAAGzD,KAAK,CAACuD,IAAI;YAC/B;UACF,CAAC,EAAEvD,KAAK,CAAC0D,OAAO,CAAC,IAAIlE,IAAI,EAAE7C,IAAI,CAACyB,IAAI,CAAC;QACvC,CAAC;QACD+C,GAAG,EAAE,SAASA,GAAGA,CAAA,EAAG;UAClB9B,UAAU,CAAC8B,GAAG,GAAGnB,KAAK,CAACmB,GAAG;UAC1B/B,IAAI,CAAC0D,IAAI,CAACzD,UAAU,CAAC;;UAErB;UACA,IAAI,IAAI,CAACM,QAAQ,CAACwD,cAAc,IAAI,EAAE,UAAU,IAAI9D,UAAU,CAAC,EAAE;YAC/D,IAAI,CAACgB,OAAO,CAAC,MAAM,EAAE;cACnBC,OAAO,EAAE;YACX,CAAC,CAAC;YACFjB,UAAU,CAACyB,QAAQ,GAAG,IAAI,CAACnB,QAAQ,CAACwD,cAAc;UACpD;UACA;UACA,IAAI5D,IAAI,EAAE;YACRF,UAAU,CAAC7C,GAAG,GAAG+C,IAAI;UACvB;UACAF,UAAU,CAACsE,QAAQ,GAAGjE,eAAe;UACrC;UACA,IAAIJ,UAAU,EAAE;YACdD,UAAU,CAACsC,GAAG,GAAGrC,UAAU;UAC7B;;UAEA;UACAD,UAAU,GAAG,CAAC,CAAC;QACjB,CAAC;QACDuE,OAAO,EAAE,SAASA,OAAOA,CAAA,EAAG;UAC1B;QAAA;MAEJ,CAAC,EAAE5D,KAAK,CAAC6D,IAAI,CAAC,CAAClH,IAAI,CAACyB,IAAI,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAOW,KAAK;EACd;;EAEA;AACF;AACA;AACA;AACA;;EAGEnC,YAAY,CAACiC,MAAM,EAAE,CAAC;IACpBrC,GAAG,EAAE,MAAM;IACXR,KAAK,EAAE,SAAS8G,IAAIA,CAACgB,KAAK,EAAE;MAC1B,IAAI,CAAC7E,UAAU,CAAC6D,IAAI,CAACgB,KAAK,CAAC;IAC7B;;IAEA;AACJ;AACA;AACA;AACA;EAEE,CAAC,EAAE;IACDtH,GAAG,EAAE,KAAK;IACVR,KAAK,EAAE,SAAS+H,GAAGA,CAAA,EAAG;MACpB;MACA,IAAI,CAAC9E,UAAU,CAAC6D,IAAI,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC,CAAC,CAAC;EAEH,OAAOjE,MAAM;AACf,CAAC,CAACrB,QAAQ,CAAC,SAAS,CAAC,CAAC;AAEtBzB,OAAO,CAAC,SAAS,CAAC,GAAG8C,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}