{"ast":null,"code":"/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\nvar parseSyncSafeInteger = function (data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function (bytes, start, end) {\n  var i,\n    result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function (bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\nvar parseId3TagSize = function (header, byteIndex) {\n  var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\nvar parseAdtsSize = function (header, byteIndex) {\n  var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n  return highTwo | middle | lowThree;\n};\nvar parseType = function (header, byteIndex) {\n  if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n    return 'timed-metadata';\n  } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n    return 'audio';\n  }\n  return null;\n};\nvar parseSampleRate = function (packet) {\n  var i = 0;\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n  return null;\n};\nvar parseAacTimestamp = function (packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            return size;\n          }\n          break;\n        }\n      }\n    }\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};","map":{"version":3,"names":["ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","data","percentEncode","bytes","start","end","i","result","toString","slice","parseIso88591","unescape","parseId3TagSize","header","byteIndex","returnSize","flags","footerPresent","parseAdtsSize","lowThree","middle","highTwo","parseType","charCodeAt","parseSampleRate","packet","length","parseAacTimestamp","frameStart","frameSize","frame","frameHeader","subarray","String","fromCharCode","byteLength","owner","d","size","module","exports"],"sources":["C:/Users/J3adl30y/Desktop/videostreaming/client/node_modules/videojs-contrib-hls/node_modules/mux.js/lib/aac/probe.js"],"sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}