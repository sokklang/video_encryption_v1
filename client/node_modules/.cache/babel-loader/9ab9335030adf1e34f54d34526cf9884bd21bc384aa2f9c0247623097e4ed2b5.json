{"ast":null,"code":"/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function () {\n  this.init = function () {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function (type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function (type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function (type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function () {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function (destination) {\n  this.on('data', function (data) {\n    destination.push(data);\n  });\n  this.on('done', function (flushSource) {\n    destination.flush(flushSource);\n  });\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function (data) {\n  this.trigger('data', data);\n};\nStream.prototype.flush = function (flushSource) {\n  this.trigger('done', flushSource);\n};\nmodule.exports = Stream;","map":{"version":3,"names":["Stream","init","listeners","on","type","listener","concat","off","index","indexOf","slice","splice","trigger","callbacks","i","length","args","arguments","call","push","apply","dispose","prototype","pipe","destination","data","flushSource","flush","module","exports"],"sources":["C:/Users/J3adl30y/Desktop/videostreaming/client/node_modules/videojs-contrib-hls/node_modules/mux.js/lib/utils/stream.js"],"sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,MAAM,GAAG,SAAAA,CAAA,EAAW;EACtB,IAAI,CAACC,IAAI,GAAG,YAAW;IACrB,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,EAAE,GAAG,UAASC,IAAI,EAAEC,QAAQ,EAAE;MACjC,IAAI,CAACH,SAAS,CAACE,IAAI,CAAC,EAAE;QACpBF,SAAS,CAACE,IAAI,CAAC,GAAG,EAAE;MACtB;MACAF,SAAS,CAACE,IAAI,CAAC,GAAGF,SAAS,CAACE,IAAI,CAAC,CAACE,MAAM,CAACD,QAAQ,CAAC;IACpD,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACE,GAAG,GAAG,UAASH,IAAI,EAAEC,QAAQ,EAAE;MAClC,IAAIG,KAAK;MACT,IAAI,CAACN,SAAS,CAACE,IAAI,CAAC,EAAE;QACpB,OAAO,KAAK;MACd;MACAI,KAAK,GAAGN,SAAS,CAACE,IAAI,CAAC,CAACK,OAAO,CAACJ,QAAQ,CAAC;MACzCH,SAAS,CAACE,IAAI,CAAC,GAAGF,SAAS,CAACE,IAAI,CAAC,CAACM,KAAK,CAAC,CAAC;MACzCR,SAAS,CAACE,IAAI,CAAC,CAACO,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MAChC,OAAOA,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IACD;AACJ;AACA;AACA;AACA;IACI,IAAI,CAACI,OAAO,GAAG,UAASR,IAAI,EAAE;MAC5B,IAAIS,SAAS,EAAEC,CAAC,EAAEC,MAAM,EAAEC,IAAI;MAC9BH,SAAS,GAAGX,SAAS,CAACE,IAAI,CAAC;MAC3B,IAAI,CAACS,SAAS,EAAE;QACd;MACF;MACA;MACA;MACA;MACA;MACA,IAAII,SAAS,CAACF,MAAM,KAAK,CAAC,EAAE;QAC1BA,MAAM,GAAGF,SAAS,CAACE,MAAM;QACzB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,MAAM,EAAE,EAAED,CAAC,EAAE;UAC3BD,SAAS,CAACC,CAAC,CAAC,CAACI,IAAI,CAAC,IAAI,EAAED,SAAS,CAAC,CAAC,CAAC,CAAC;QACvC;MACF,CAAC,MAAM;QACLD,IAAI,GAAG,EAAE;QACTF,CAAC,GAAGG,SAAS,CAACF,MAAM;QACpB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,SAAS,CAACF,MAAM,EAAE,EAAED,CAAC,EAAE;UACrCE,IAAI,CAACG,IAAI,CAACF,SAAS,CAACH,CAAC,CAAC,CAAC;QACzB;QACAC,MAAM,GAAGF,SAAS,CAACE,MAAM;QACzB,KAAKD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,MAAM,EAAE,EAAED,CAAC,EAAE;UAC3BD,SAAS,CAACC,CAAC,CAAC,CAACM,KAAK,CAAC,IAAI,EAAEJ,IAAI,CAAC;QAChC;MACF;IACF,CAAC;IACD;AACJ;AACA;IACI,IAAI,CAACK,OAAO,GAAG,YAAW;MACxBnB,SAAS,GAAG,CAAC,CAAC;IAChB,CAAC;EACH,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAF,MAAM,CAACsB,SAAS,CAACC,IAAI,GAAG,UAASC,WAAW,EAAE;EAC5C,IAAI,CAACrB,EAAE,CAAC,MAAM,EAAE,UAASsB,IAAI,EAAE;IAC7BD,WAAW,CAACL,IAAI,CAACM,IAAI,CAAC;EACxB,CAAC,CAAC;EAEF,IAAI,CAACtB,EAAE,CAAC,MAAM,EAAE,UAASuB,WAAW,EAAE;IACpCF,WAAW,CAACG,KAAK,CAACD,WAAW,CAAC;EAChC,CAAC,CAAC;EAEF,OAAOF,WAAW;AACpB,CAAC;;AAED;AACA;AACA;AACA;AACAxB,MAAM,CAACsB,SAAS,CAACH,IAAI,GAAG,UAASM,IAAI,EAAE;EACrC,IAAI,CAACb,OAAO,CAAC,MAAM,EAAEa,IAAI,CAAC;AAC5B,CAAC;AAEDzB,MAAM,CAACsB,SAAS,CAACK,KAAK,GAAG,UAASD,WAAW,EAAE;EAC7C,IAAI,CAACd,OAAO,CAAC,MAAM,EAAEc,WAAW,CAAC;AACnC,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG7B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}